<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Javascript Firefox Plugin on Sadique Ali</title>
    <link>http://sdqali.in/categories/code-javascript-firefox-plugin/</link>
    <description>Recent content in Code Javascript Firefox Plugin on Sadique Ali</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 29 Nov 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://sdqali.in/categories/code-javascript-firefox-plugin/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>My first Firefox plugin: GetCache - View cached version of the current page</title>
      <link>http://sdqali.in/blog/2012/11/29/my-first-firefox-plugin-getcache---view-cached-version-of-the-current-page/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2012/11/29/my-first-firefox-plugin-getcache---view-cached-version-of-the-current-page/</guid>
      <description>

&lt;p&gt;I released my &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/getcache-ff/&#34;&gt;first Firefox plugin&lt;/a&gt; today. It
is awaiting review, but if you are adventurous, you can install it right
now. Go on, try it.&lt;/p&gt;

&lt;p&gt;After I had written the &lt;a href=&#34;http://sdqali.in/blog/2012/11/28/getcache-a-chrome-plugin-to-view-cached-version-of-the-current-page/&#34;&gt;Chrome version&lt;/a&gt; yesterday, &lt;a href=&#34;https://twitter.com/ManishChaks&#34;&gt;Manish&lt;/a&gt; suggested
that I should write one for Firefox. There already exist Firfox plugins
that does exactly what GetCache does, but I decided to go ahead and write it
for fun. And of course, the fact that I could publish it without having
to sign up with my Credit Card information was enticing.&lt;/p&gt;

&lt;p&gt;There are three approaches to write a Firefox plugin:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/XUL_School/Introduction&#34;&gt;Traditional extensions&lt;/a&gt; - Uses JAvaScript and XUL.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/developers/builder&#34;&gt;Jetpacks&lt;/a&gt; - Uses
HTML, CSS and JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Extensions/Bootstrapped_extensions&#34;&gt;Bootstrapped extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I decided to go the Jetpack because the development process and
technologies were similar to Chrome plugins. And I had no prior
experience with XUL. Once I had downloaded the SDK and set it up, things
were pretty easy. The
&lt;a href=&#34;https://addons.mozilla.org/en-US/developers/docs/sdk/latest/&#34;&gt;API&lt;/a&gt; is
well documented.&lt;/p&gt;

&lt;h2 id=&#34;the-api&#34;&gt;The API&lt;/h2&gt;

&lt;p&gt;The bulk of the code is JavaScript. The API is easy to use. The
following snippet adds a widget to the Addon toolbar at the bottom of
the Firefox window:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; createWidget &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;function&lt;/span&gt; () {
      &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;new&lt;/span&gt; Widget({
        id&lt;span style=&#34;color: #555555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;sdqali-getcache&amp;quot;&lt;/span&gt;,
        label&lt;span style=&#34;color: #555555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;Get Google&amp;#39;s cached version of the current page..&amp;quot;&lt;/span&gt;,
        contentURL&lt;span style=&#34;color: #555555&#34;&gt;:&lt;/span&gt; self.data.url (&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;images/icon.png&amp;quot;&lt;/span&gt;),
        onClick&lt;span style=&#34;color: #555555&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;function&lt;/span&gt;(event) {
          loadCachedPage ();
        }
      });
    };
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;adding-context-menu-entries&#34;&gt;Adding context menu entries&lt;/h2&gt;

&lt;p&gt;While things were pretty smooth overall, I ran in to a weird edge
case. I wanted a context menu entry that would load the Google cache
page, and I wanted this entry to be available regardless of whether the
user has selected some text in the page or not. The API uses the notion
of
&lt;a href=&#34;https://addons.mozilla.org/en-US/developers/docs/sdk/latest/packages/addon-kit/context-menu.html&#34;&gt;&lt;code&gt;Contexts&lt;/code&gt;&lt;/a&gt;
o decide when the menu entry will be available. While the API says that
I can use an arrays of &lt;code&gt;Contexts&lt;/code&gt;, I had no success with it. I ended up
creating two context menu entries, one attached to the &lt;code&gt;PageContext&lt;/code&gt; and
one attached to the &lt;code&gt;SelectionContext&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;source&#34;&gt;Source&lt;/h2&gt;

&lt;p&gt;I used this
&lt;a href=&#34;http://www.iconfinder.com/icondetails/7065/128/cache_icon&#34;&gt;beautiful icon&lt;/a&gt;
by Sergio Sanchez Lopez. Since it comes with a GPL license, the plugin
is also licensed under GPL.
I have put the source code on &lt;a href=&#34;https://github.com/sdqali/getcache-ff&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>