<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Ruby on Sadique Ali</title>
    <link>http://sdqali.in/categories/code-ruby/</link>
    <description>Recent content in Code Ruby on Sadique Ali</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 24 Mar 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://sdqali.in/categories/code-ruby/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Empathy Log Parser</title>
      <link>http://sdqali.in/blog/2011/03/24/empathy-log-parser/</link>
      <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2011/03/24/empathy-log-parser/</guid>
      <description>&lt;p&gt;I use Empathy as my preferred IM application. Today, I wanted to have a look at an IM conversation I had with someone. I pulled out the Empathy log corresponding to that conversation, and boom - it is in XML.&lt;/p&gt;

&lt;p&gt;Just another excuse to write code. So I came up with the following. It was easy to write and it does not do much - It uses the Hpricot gem to parse the XML and prints the name of the people involved in the chat and their messages in a human readable form. What? You are one of those souls who actually enjoy reading XML? Well, I am not one of those.&lt;/p&gt;

&lt;p&gt;So here is the code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;#!/usr/bin/env ruby
# empathy_lp.rb
# Usage - ./empathy_lp.rb /tmp/20110323.log

require &#39;rubygems&#39;
require &#39;hpricot&#39;

module EmpathyLP
  class LogParser
    def initialize file_path
      conversation_xml = IO.readlines(file_path).to_s
      @doc = Hpricot conversation_xml
    end

    def messages
      (@doc/&amp;quot;message&amp;quot;).map do |m|
        m.attributes[&#39;name&#39;] + &amp;quot;: &amp;quot; + m.inner_text
      end
    end
  end
end

path = ARGV.first
puts EmpathyLP::LogParser.new(path).messages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I will modify this slightly to show a timestamp for each message.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Binary Signature Art</title>
      <link>http://sdqali.in/blog/2011/03/23/binary-signature-art/</link>
      <pubDate>Wed, 23 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2011/03/23/binary-signature-art/</guid>
      <description>&lt;p&gt;I was reading this very interesting &lt;a href=&#34;http://forums.xkcd.com/viewtopic.php?f=7&amp;amp;t=11765&#34;&gt;thread&lt;/a&gt; on the xkcd forum when I noticed a post from a user with the following signature in binary:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;01001101 01100001 01100100 01100101 00100000 01011001 01101111 01110101 00100000 01001100 01101111 01101111 01101011 00100001&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At first, that did not particularly entice me, mostly because the topic being discussed was really interesting, but it did come back to my focus when I saw that another user had quoted the signature, along with the comment &lt;code&gt;Yeah, you know it. LOL :-)&lt;/code&gt;. I had to find what the original message was.&lt;/p&gt;

&lt;p&gt;So couple of minutes of Ruby later, I figured it out. His message was simple - &lt;code&gt;Made You Look!&lt;/code&gt;. Yeah, he sure did!&lt;/p&gt;

&lt;p&gt;Here is the rather simple Ruby code snippet that did the trick:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;code = &amp;quot;01001101 01100001 01100100 01100101 00100000 01011001 01101111 01110101 00100000 01001100 01101111 01101111 01101011 00100001&amp;quot;

parts = code.split &amp;quot; &amp;quot;

text = parts.map do |p|
  p.to_i(2).chr
end.to_s

puts text
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>