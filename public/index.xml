<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sadique Ali</title>
    <link>http://sdqali.in/</link>
    <description>Recent content on Sadique Ali</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 21 May 2015 22:58:41 -0700</lastBuildDate>
    <atom:link href="http://sdqali.in/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Making sense of Cloud Foundry security group declarations</title>
      <link>http://sdqali.in/blog/2015/05/21/making-sense-of-cloud-foundry-security-group-declarations/</link>
      <pubDate>Thu, 21 May 2015 22:58:41 -0700</pubDate>
      
      <guid>http://sdqali.in/blog/2015/05/21/making-sense-of-cloud-foundry-security-group-declarations/</guid>
      <description>&lt;p&gt;Cloud Foundry allows fine grained declaration of security groups, down to IP address ranges and Ports. While this provides great flexibility, making sense of why each rule in a security group exists and what each does is really difficult because of the limitations of the security group declaration mechanism.&lt;/p&gt;

&lt;p&gt;The Cloud Foundry command line tool allows the creation of security groups from JSON declarations. The &lt;code&gt;create-security-group&lt;/code&gt; command works like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; cf create-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The JSON file needs to declare an array of rules where each rule has the following structure:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
   &amp;quot;protocol&amp;quot;: &amp;quot;tcp&amp;quot;,
   &amp;quot;destination&amp;quot;: &amp;quot;10.244.1.18&amp;quot;,
   &amp;quot;ports&amp;quot;: &amp;quot;3306&amp;quot;,
   &amp;quot;log&amp;quot;: true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my Cloud Foundry environment, I have a security group assigned to a &lt;code&gt;Space&lt;/code&gt; with the following declaration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;&amp;lt;ip-foo&amp;gt;&amp;quot;,&amp;quot;ports&amp;quot;:&amp;quot;3306&amp;quot;},
  {&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;&amp;lt;some-ip&amp;gt;-&amp;lt;another-ip&amp;gt;&amp;quot;,&amp;quot;ports&amp;quot;:&amp;quot;55882&amp;quot;},
  {&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;&amp;lt;ip-bar&amp;gt;&amp;quot;,&amp;quot;ports&amp;quot;:&amp;quot;443&amp;quot;}
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With only 3 rules in place, it is already confusing what service each rule is for and why they are there.&lt;/p&gt;

&lt;p&gt;I believe this can be easily improved by allowing an extra field &lt;code&gt;comment&lt;/code&gt; that provides context about each rule. With this in place, the rules will look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;&amp;lt;ip-foo&amp;gt;&amp;quot;,&amp;quot;ports&amp;quot;:&amp;quot;3306&amp;quot;, &amp;quot;comment&amp;quot;: &amp;quot;Allow database connection to PostgreSQL at hosted-postgres-service.com&amp;quot;},
  {&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;&amp;lt;some-ip&amp;gt;-&amp;lt;another-ip&amp;gt;&amp;quot;,&amp;quot;ports&amp;quot;:&amp;quot;55882&amp;quot;, &amp;quot;comment&amp;quot;: &amp;quot;Allow logging to hosted-logging-service.com&amp;quot;},
  {&amp;quot;protocol&amp;quot;:&amp;quot;tcp&amp;quot;,&amp;quot;destination&amp;quot;:&amp;quot;&amp;lt;ip-bar&amp;gt;&amp;quot;,&amp;quot;ports&amp;quot;:&amp;quot;443&amp;quot;, &amp;quot;comment&amp;quot;: &amp;quot;Allow monitoring service at hosted-monitoring-service.com&amp;quot;}
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As things stand, Cloud Foundry Cloud Controller does not allow any extra fields to exist in a rule. For example, the above declaration will cause an error while trying to create a security group.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; cf create-security-group sample-space-security-group spec.json

Server error, status code: 400, error code: 300001, message: The security group is invalid: rules rule number 1 contains the invalid field &#39;comment&#39;, rules rule number 2 contains the invalid field &#39;comment&#39;, rules rule number 3 contains the invalid field &#39;comment&#39;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If JSON allowed comments, commenting would result in a slightly more readable declaration file, although it won&amp;rsquo;t stored in the Cloud Controller database and hence won&amp;rsquo;t be available upon querying with &lt;code&gt;cf security-group &amp;lt;security-group-name&amp;gt;&lt;/code&gt;. This is a moot point anyway, as JSON &lt;a href=&#34;https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr&#34;&gt;explicitly&lt;/a&gt; doesn&amp;rsquo;t allow comments. There are workarounds that involve minifying the JSON input before parsing the configurations, but I don&amp;rsquo;t think that is the right direction to head to.&lt;/p&gt;

&lt;p&gt;I have filed a &lt;a href=&#34;https://github.com/cloudfoundry/cloud_controller_ng/issues/382&#34;&gt;ticket&lt;/a&gt; against Cloud Controller to address this issue. It &lt;a href=&#34;https://github.com/cloudfoundry/cloud_controller_ng/blob/cacb5563264208e920f4b7fecc7060f89b929fbb/lib/cloud_controller/rule_validator.rb#L6&#34;&gt;doesn&amp;rsquo;t look like a difficult&lt;/a&gt; feature to implement. Hopefully this is available in Cloud Controller soon.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configuring Cloud Foundry Java Memory Parameters</title>
      <link>http://sdqali.in/blog/2015/05/20/configuring-cloud-foundry-java-memory-parameters/</link>
      <pubDate>Wed, 20 May 2015 19:42:56 -0700</pubDate>
      
      <guid>http://sdqali.in/blog/2015/05/20/configuring-cloud-foundry-java-memory-parameters/</guid>
      <description>&lt;p&gt;This week I have been trying out Cloud Foundry. Today while trying to set up monitoring through AppDynamics, the sample application that I was using started crashing because of a Java memory error. This blog post discusses how to prevent this from happening by configuring Java memory parameters used by the application.&lt;/p&gt;

&lt;p&gt;This is what was in the Cloud Foundry logs.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;May 20 18:14:51 CloudFoundry 6767b9fd-1874-43cb-a4f8-7470a17c90ae/[App/2]:  /bin/bash: line 31:    32 Killed                  ( SERVER_PORT=$PORT $PWD/.java-buildpack/open_jdk_jre/bin/java -cp $PWD/.:$PWD/.java-buildpack/spring_auto_reconfiguration/spring_auto_reconfiguration-1.4.0_RELEASE.jar -Djava.io.tmpdir=$TMPDIR -XX:OnOutOfMemoryError=$PWD/.java-buildpack/open_jdk_jre/bin/killjava.sh -Xmx499200K -Xms499200K -XX:MaxPermSize=65M -XX:PermSize=65M -Xss1M -javaagent:$PWD/.java-buildpack/app_dynamics_agent/javaagent.jar -Dappdynamics.agent.applicationName=&#39;******&#39; -Dappdynamics.agent.tierName=&#39;******&#39; -Dappdynamics.agent.nodeName=$(expr &amp;quot;$VCAP_APPLICATION&amp;quot; : &#39;.*instance_id[&amp;quot;: ]*&amp;quot;\([a-z0-9]\+\)&amp;quot;.*&#39;) -Dappdynamics.agent.accountAccessKey=****** -Dappdynamics.agent.accountName=******* -Dappdynamics.controller.hostName=******.saas.appdynamics.com -Dappdynamics.controller.port=443 -Dappdynamics.controller.ssl.enabled=true org.springframework.boot.loader.JarLauncher )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It can be seen that the &lt;code&gt;MaxPermSize&lt;/code&gt; is set to &lt;code&gt;65M&lt;/code&gt;. Now, this is not something I configured for this app. This value was assigned by the Java build pack generated by Cloud Foundry when the app was deployed. This can be in the &lt;a href=&#34;https://github.com/cloudfoundry/java-buildpack&#34;&gt;Java build pack&lt;/a&gt;&amp;rsquo;s OpenJDK JRE configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;# config/open_jdk_jre.yml
---
jre:
  version: 1.8.0_+
  repository_root: &amp;quot;{default.repository.root}/openjdk/{platform}/{architecture}&amp;quot;
memory_calculator:
  version: 1.+
  repository_root: &amp;quot;{default.repository.root}/memory-calculator/{platform}/{architecture}&amp;quot;
  memory_sizes:
    metaspace: 64m..
    permgen: 64m..
  memory_heuristics:
    heap: 75
    metaspace: 10
    permgen: 10
    stack: 5
    native: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only way to change this value is to change the configurations of the Java build pack. There are two ways to do this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fork the build pack, modify the default memory parameters and use this build pack to deploy.&lt;/li&gt;
&lt;li&gt;Override the memory parameters used by the build pack at deploy time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Option 1 seems to be an overkill and Cloud Foundry provides a &lt;a href=&#34;https://github.com/cloudfoundry/java-buildpack/blob/master/README.md#configuration-and-extension&#34;&gt;relatively easy method&lt;/a&gt; to override build pack parameters. Option 2 is the approach I decided to take.&lt;/p&gt;

&lt;p&gt;There are &lt;a href=&#34;https://github.com/cloudfoundry/java-buildpack/blob/master/docs/jre-open_jdk_jre.md&#34;&gt;two sets of mappings&lt;/a&gt; that control the various Java memory configurations - &lt;code&gt;memory_sizes&lt;/code&gt; and &lt;code&gt;memory_heuristics&lt;/code&gt;. Together, these two parameters provide a lot of &lt;a href=&#34;https://github.com/cloudfoundry/java-buildpack/blob/master/docs/jre-open_jdk_jre.md#memory-calculation&#34;&gt;flexibility&lt;/a&gt; to control memory allocation. For the particular issue my application faced, all I need to do is to force an appropriate value for &lt;code&gt;MaxPermSize&lt;/code&gt; and this can be done by setting the &lt;code&gt;JBP_CONFIG_OPEN_JDK_MEMORY_CALCULATOR&lt;/code&gt; environment variable as:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cf set-env app-name JBP_CONFIG_OPEN_JDK_MEMORY_CALCULATOR [memory_sizes: {metaspace: 128m}]&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While this configurations works for applications running under Java &lt;code&gt;1.8&lt;/code&gt;, the right parameter to use for applications running under Java &lt;code&gt;1.7&lt;/code&gt; is &lt;code&gt;permgen&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cf set-env app-name JBP_CONFIG_OPEN_JDK_JRE &#39;[memory_sizes: {metaspace: 128m}]&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After re-staging the application and making sure the application works as expected, I added this environment variable to the application&amp;rsquo;s &lt;code&gt;manifest.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
applications:
- name: test-app
  ...
  env:
    JBP_CONFIG_OPEN_JDK_MEMORY_CALCULATOR: &amp;quot;[memory_sizes: {metaspace: 128m}]&amp;quot;
  ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To see how to adjust the memory parameters by modifying the Java build pack, see Haydon Ryan&amp;rsquo;s blog post &lt;a href=&#34;http://www.haydonryan.com/java-8-increasing-metaspace-size-in-cloud-foundry/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Disputed territories and merging shapes and features</title>
      <link>http://sdqali.in/blog/2014/08/08/disputed-territories-and-merging-shapes-and-features/</link>
      <pubDate>Fri, 08 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/08/08/disputed-territories-and-merging-shapes-and-features/</guid>
      <description>&lt;p&gt;Making a map that shows a disputed territory can be a tricky business. Nation states vigorously contest maps that appear to portray a boundary that challenges what a border looks like. From the Falkland Islands to Kuril Islands; from Western Sahara to Arunachal Pradesh, disputed territories result in omissions, additions and inaccuracies in maps.&lt;/p&gt;

&lt;p&gt;I grew up looking at maps in books printed by the Oxford Press, that came with a disclaimer in blue rubber stamped across them that stated how the map was wrong. This was due to the fact that the maps showed only the parts of Kashmir being administered by India, thereby omitting areas under Chinese and Pakistani control. The Criminal Law Amendment Act, 1961 in India makes it punishable with imprisonment up to 6 months to publish a map that excludes all or parts of Kashmir&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:331feb6386b5b7cd03d2133ef33a86dd:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:331feb6386b5b7cd03d2133ef33a86dd:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;This creates a lot of trouble for people who make maps for fun or to visualize data. Survey of India does not make it easy to get hold of shape files that represent India&amp;rsquo;s boundaries, and all the shape files that are available from international sources exclude parts of Kashmir. So, how do we solve this problem?&lt;/p&gt;

&lt;p&gt;The North American Cartographic Information Society&amp;rsquo;s Natural Earth &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:331feb6386b5b7cd03d2133ef33a86dd:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:331feb6386b5b7cd03d2133ef33a86dd:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; maps has all the disputed territories available for download as shape files. One way to solve the issue on our hands will be to take the shapes relevant to Kashmir from this file and merge it with the rest of India.&lt;/p&gt;

&lt;p&gt;We will explore how to perform and an operation like this through QGIS &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:331feb6386b5b7cd03d2133ef33a86dd:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:331feb6386b5b7cd03d2133ef33a86dd:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the disputed areas shape file in QGIS.&lt;/li&gt;
&lt;li&gt;Select all the regions in Kashmir that are seen by India as it&amp;rsquo;s territories.&lt;/li&gt;
&lt;li&gt;In order to make merging these shapes easier, we will introduce a new attribute on them. Go to &lt;code&gt;Layer → Open Attribute Table&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Switch to editing mode in the Attribute Table by clicking the &lt;code&gt;Toggle editing mode&lt;/code&gt; button.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;New column&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Choose a name for the column. In this example we are using &lt;code&gt;target&lt;/code&gt;. Select &lt;code&gt;Text (string)&lt;/code&gt; as the Type and choose a number like &lt;code&gt;10&lt;/code&gt; for width.&lt;/li&gt;
&lt;li&gt;For all the selected shapes, set the value of &lt;code&gt;target&lt;/code&gt; to Kashmir.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;Dissolve&lt;/code&gt; tool, found at &lt;code&gt;Vector → Geoprocessing tools → Dissolve&lt;/code&gt; to dissolve the shapes in to a single shape file. Choose &lt;code&gt;target&lt;/code&gt; as the value for &lt;code&gt;dissolve&lt;/code&gt; field. Save the output to a new shape file.&lt;/li&gt;
&lt;li&gt;Install the QGIS plugin &lt;code&gt;MergeShapes&lt;/code&gt;. Plugins can be installed from &lt;code&gt;Plugins → Manage and Install Plugins&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy the &lt;a href=&#34;http://biogeo.ucdavis.edu/data/diva/adm/IND_adm.zip&#34;&gt;India shape file&lt;/a&gt; from DIVA-GIS and the newly generated Kashmir shape file to a directory.&lt;/li&gt;
&lt;li&gt;Merge these into a single shape using &lt;code&gt;Vector → MergeShapes → MergeShapes&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With that we have a shape File for India that closely resembles India&amp;rsquo;s official version.&lt;/p&gt;

&lt;p&gt;Once we have the shape File for Kashmir from step &lt;code&gt;8&lt;/code&gt;, we could do the merging by converting both shape Files to their corresponding GeoJSON formats and doing simple JavaScript operations on the objects.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start by converting both shape Files to their GeoJSON representation.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; ogr2ogr -f GeoJSON india.geo.json india.shp
&amp;gt; ogr2ogr -f GeoJSON kashmir.geo.json kashmir.shp
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Load the two feature collections in to a JavaScript console. I tend to use Chromium&amp;rsquo;s Developer Tools, but in this example I am using  Node.js&amp;rsquo; REPL.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;kashmir = JSON.parse(fs.readFileSync(&amp;quot;./kashmir.geo.json&amp;quot;).toString());
india = JSON.parse(fs.readFileSync(&amp;quot;./india.geo.json&amp;quot;).toString());
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Identify the Kashmir feature in the India feature collection.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;kin = india.features.filter(function(f) {return f.properties.NAME_1.match(&amp;quot;Kashmir&amp;quot;);})[0];
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Replace it&amp;rsquo;s coordinates with the unified Kashmir we generated.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;kin.geometry.coordinates = kashmir.features[0].geometry.coordinates;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Save it back to a GeoJSON file.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;fs.writeFileSync(&amp;quot;full_india.geo.json&amp;quot;, JSON.stringify(india));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the GeoJSON file can be transformed back in to a shape file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ogr2ogr -f &#39;ESRI Shapefile&#39; full_india.shp full_india.geo.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Back to Kashmir and laws. Will this map save one from trouble? I am not sure, but this is an improvement on the omission of territories.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:331feb6386b5b7cd03d2133ef33a86dd:1&#34;&gt;The Criminal Law Amendment Act, 1961 - &lt;a href=&#34;http://www.vakilno1.com/bareacts/laws/the-criminal-law-amendment-act-1961.html#2_Questioning_the_territorial_integrity_or_frontiers_of_India_in_a_manner_prejudicial_to_the_interests_of_safety_and_security_of_India&#34;&gt;Questioning the territorial integrity or frontiers of India in a manner prejudicial to the interests of safety and security of India.&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:331feb6386b5b7cd03d2133ef33a86dd:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:331feb6386b5b7cd03d2133ef33a86dd:2&#34;&gt;Natural Earth is a public domain map dataset available at 1:10m, 1:50m, and 1:110 million scales. The data set is available for download &lt;a href=&#34;http://www.naturalearthdata.com/downloads/&#34;&gt;here&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:331feb6386b5b7cd03d2133ef33a86dd:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:331feb6386b5b7cd03d2133ef33a86dd:3&#34;&gt;&lt;a href=&#34;http://qgis.org/en/site/&#34;&gt;QGIS&lt;/a&gt; is a cross-platform free and open source desktop geographic information systems application that provides data viewing, editing, and analysis capabilities.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:331feb6386b5b7cd03d2133ef33a86dd:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A list of GIS tools</title>
      <link>http://sdqali.in/blog/2014/08/03/a-list-of-gis-tools/</link>
      <pubDate>Sun, 03 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/08/03/a-list-of-gis-tools/</guid>
      <description>

&lt;p&gt;I have been playing around with maps a lot these days and have ended up using various tools in the process. This blog post is a way to make a note of these tools for later use.&lt;/p&gt;

&lt;h1 id=&#34;geojson-io:7591cb75a8855983e3f9edf802cbce55&#34;&gt;geojson.io&lt;/h1&gt;

&lt;p&gt;Mapbox&amp;rsquo;s &lt;a href=&#34;http://geojson.io/&#34;&gt;geojson.io&lt;/a&gt; is a simple tool for creating, editing and sharing maps. It lets you import map data in various formats and has an editor to modify maps.&lt;/p&gt;

&lt;h1 id=&#34;geojson-topojson:7591cb75a8855983e3f9edf802cbce55&#34;&gt;GeoJSON-TopoJSON&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/JeffPaine&#34;&gt;Jeff Paine&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/JeffPaine/geojson-topojson&#34;&gt;GeoJSON-TopoJSON&lt;/a&gt; is a simple tool to convert between the more common GeoJSON format and the TopoJSON format used by libraries like D3.js. It is a simple tool, but it does exactly what it says on the tin.&lt;/p&gt;

&lt;h1 id=&#34;the-distillery:7591cb75a8855983e3f9edf802cbce55&#34;&gt;The Distillery&lt;/h1&gt;

&lt;p&gt;The New York Times&amp;rsquo; &lt;a href=&#34;http://shancarter.com/&#34;&gt;Shan Carter&lt;/a&gt; built &lt;a href=&#34;http://shancarter.github.io/distillery/&#34;&gt;The Distillery&lt;/a&gt;, a GUI around TopoJSON. Apart from converting GeoJSON to TopoJSON, it allows you to alter the map&amp;rsquo;s projection.&lt;/p&gt;

&lt;h1 id=&#34;ogr2ogr:7591cb75a8855983e3f9edf802cbce55&#34;&gt;ogr2ogr&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gdal.org/ogr2ogr.html&#34;&gt;ogr2ogr&lt;/a&gt; is a command line utility to convert features data between different file formats.&lt;/p&gt;

&lt;h1 id=&#34;ogre-ogr2ogr-web-client:7591cb75a8855983e3f9edf802cbce55&#34;&gt;Ogre - ogr2ogr web client&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ogre.adc4gis.com/&#34;&gt;Ogre&lt;/a&gt; is a web UI around ogr2ogr. It lets you do transformations on your map files when you are lazy and don&amp;rsquo;t want to use the command line to run ogr2ogr.&lt;/p&gt;

&lt;h1 id=&#34;merge-geojson-features:7591cb75a8855983e3f9edf802cbce55&#34;&gt;merge-geojson-features&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.npmjs.org/package/&#34;&gt;merge-geojson-features&lt;/a&gt; is a Node.js module to combine Features defined in different files in to a single FeatureCollection. I use it when I am not in the mood to alter GeoJSON objects from a JavaScript console by hand.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Importing the Yelp dataset into MongoDB</title>
      <link>http://sdqali.in/blog/2014/08/02/importing-the-yelp-dataset-into-mongodb/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/08/02/importing-the-yelp-dataset-into-mongodb/</guid>
      <description>&lt;p&gt;Today Yelp announced their dataset challenge &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c6878b2b502d5257f269a3d2e809c771:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:c6878b2b502d5257f269a3d2e809c771:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The dataset they released includes data from 5 cities (Phoenix, Las Vegas, Madison, Waterloo and Edinburgh) and consists of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;42,153 businesses&lt;/li&gt;
&lt;li&gt;320,002 business attributes&lt;/li&gt;
&lt;li&gt;31,617 check-in sets&lt;/li&gt;
&lt;li&gt;252,898 users&lt;/li&gt;
&lt;li&gt;955,999 edge social graph&lt;/li&gt;
&lt;li&gt;403,210 tips&lt;/li&gt;
&lt;li&gt;1,125,458 reviews&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The data is available for public consumption, although Yelp owns any derivative dataset you create from the original &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c6878b2b502d5257f269a3d2e809c771:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:c6878b2b502d5257f269a3d2e809c771:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;The data is available as files with each line representing a JSON object. Since I am using MongoDB these days to analyze geospatial data, I wanted to convert this into an easy format that I could import into Mongo. Mongo puts a strict constraint on how a location needs to be specified - It expects a location field in a document to be an array in the format &lt;code&gt;[longitude, latitude]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With this in mind, the first step is to convert and transform the objects into objects that Mongo can make sense of. The following Ruby script does the job:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;#!/usr/bin/env ruby

require &amp;quot;json&amp;quot;

businesses = IO.readlines(&amp;quot;yelp.business.json&amp;quot;).map do |line|
  b = JSON.parse(line)
  b[&amp;quot;location&amp;quot;] = {
    &amp;quot;type&amp;quot; =&amp;gt; &amp;quot;Point&amp;quot;,
    &amp;quot;coordinates&amp;quot; =&amp;gt; [b[&amp;quot;longitude&amp;quot;], b[&amp;quot;latitude&amp;quot;]]
  }
  b
end
IO.write &amp;quot;businesses.mongo.json&amp;quot;, businesses.to_json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next step is to import this data into Mongo using the &lt;code&gt;mongoimport&lt;/code&gt; tool.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mongoimport --collection businesses --file businesses.mongo.json --jsonArray
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We need the &lt;code&gt;--jsonArray&lt;/code&gt; parameter because our data is an array.&lt;/p&gt;

&lt;p&gt;Since there are 42153 businesses, it will take some time. On my Macbook Pro, it took around 2 minutes, 10 seconds. Once the import is done, make sure that we have a Geospatial index on the &lt;code&gt;location&lt;/code&gt; field.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.businesses.ensureIndex({location: &amp;quot;2dsphere&amp;quot;})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the indexing is done, we can use Mongo&amp;rsquo;s Geospatial queries to find interesting things. As an example, here we look up all the restaurants within 1 kilometer distance from downtown Phoenix.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.businesses.find({
  location: {
    $near: {
      $geometry: {
	type: &amp;quot;Point&amp;quot;,
	coordinates: [-112.0667, 33.4500]
      },
      $maxDistance: 1000
    }
  }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Happy hacking.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:c6878b2b502d5257f269a3d2e809c771:1&#34;&gt;&lt;a href=&#34;http://www.yelp.com/dataset_challenge&#34;&gt;Yelp Dataset Challenge, 2014&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c6878b2b502d5257f269a3d2e809c771:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:c6878b2b502d5257f269a3d2e809c771:2&#34;&gt;DATASET CHALLENGE ACADEMIC DATASET TERMS OF USE &lt;a href=&#34;https://www.yelp.com/html/pdf/Dataset_Challenge_Academic_Dataset_Agreement.pdf&#34;&gt;Section 5, Ownership&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c6878b2b502d5257f269a3d2e809c771:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Clojure Dojo - Levenshtein edit distance</title>
      <link>http://sdqali.in/blog/2014/03/20/clojure-dojo---levenshtein-edit-distance/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/03/20/clojure-dojo---levenshtein-edit-distance/</guid>
      <description>

&lt;p&gt;I have been playing around with Clojure and after familiarising myself with the core, I decided to start writing little programs that forces me to choose the right idioms. I am starting off with Levenshtein edit distance of two strings.&lt;/p&gt;

&lt;h3 id=&#34;levenshtein-edit-distance:d5d4c3a7257ad508bc68cd569fb16682&#34;&gt;Levenshtein edit distance&lt;/h3&gt;

&lt;p&gt;Levenshtein edit distance between two string is a way of quantifying how similar or dissimilar they are, lower distance implying higher similarity. The algorithm to calculate Levenshtein distance is fairly simple - the algorithm cares about three operations that can be performed at a particular position in a string to move it towards the other - insertion, deletion and substitution.&lt;/p&gt;

&lt;p&gt;This can be recursively solved for two strings &lt;code&gt;A0:AS&lt;/code&gt; and &lt;code&gt;B0:BS&lt;/code&gt; by comparing &lt;code&gt;AS&lt;/code&gt;, &lt;code&gt;B0:BS&lt;/code&gt;; &lt;code&gt;A0:AS&lt;/code&gt;, &lt;code&gt;BS&lt;/code&gt; and &lt;code&gt;AS&lt;/code&gt;, &lt;code&gt;BS&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;code:d5d4c3a7257ad508bc68cd569fb16682&#34;&gt;Code&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(ns clojure_dojo.core)

(defn edit-distance
  &amp;quot;Return the Levenshtein edit distance between two strings&amp;quot;
  [first second]
  (cond
   (empty? first) (count second)
   (empty? second) (count first)
   :else (min (+ 1 (edit-distance (drop 1 first) second))
              (+ 1 (edit-distance first (drop 1 second)))
              (+ (cond
                  (= (take 1 first) (take 1 second)) 0
                  :else 1)
                 (edit-distance (drop 1 first) (drop 1 second))))))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test:d5d4c3a7257ad508bc68cd569fb16682&#34;&gt;Test&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(ns clojure_dojo.t-core
  (:use midje.sweet)
  (:use [clojure_dojo.core]))

(facts &amp;quot;about `edit-distance`&amp;quot;
       (fact &amp;quot;it returns length of other string if one string is empty&amp;quot;
             (edit-distance &amp;quot;foo&amp;quot; &amp;quot;&amp;quot;) =&amp;gt; 3
             (edit-distance &amp;quot;&amp;quot; &amp;quot;foo&amp;quot;) =&amp;gt; 3)
       (fact &amp;quot;detects deletions&amp;quot;
             (edit-distance &amp;quot;foo&amp;quot; &amp;quot;oo&amp;quot;) =&amp;gt; 1)
       (fact &amp;quot;detects substitutions&amp;quot;
             (edit-distance &amp;quot;ab&amp;quot;, &amp;quot;cd&amp;quot;) =&amp;gt; 2)
       (fact &amp;quot;detects additions needed&amp;quot;
             (edit-distance &amp;quot;oo&amp;quot;, &amp;quot;foo&amp;quot;) =&amp;gt; 1
             (edit-distance &amp;quot;kit&amp;quot;, &amp;quot;sitting&amp;quot;) =&amp;gt; 5
             (edit-distance &amp;quot;intention&amp;quot;, &amp;quot;execution&amp;quot;) =&amp;gt; 5
             (edit-distance &amp;quot;sittin&amp;quot;, &amp;quot;sitting&amp;quot;) =&amp;gt; 1))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;the-problem-with-this-approach:d5d4c3a7257ad508bc68cd569fb16682&#34;&gt;The problem with this approach&lt;/h3&gt;

&lt;p&gt;This solution looks fine - it passes the tests. However, if we carefully observe the recursion tree, we notice that there are sub-problems that are solved multiple times and this makes this algorithm&amp;rsquo;s order of complexity Θ(3^min(m, n)). This can be observed from the call tree of this recursion.&lt;/p&gt;

&lt;h3 id=&#34;improvement:d5d4c3a7257ad508bc68cd569fb16682&#34;&gt;Improvement&lt;/h3&gt;

&lt;p&gt;Recursive algorithms of this nature can be improved in two ways - memoization during recursion or applying &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_programming&#34;&gt;Dynamic Programming&lt;/a&gt; in a bottom up manner. The next blog post in this series will deal with how these two approaches can be done in Clojure.&lt;/p&gt;

&lt;p&gt;The code for the above solution is on &lt;a href=&#34;https://github.com/sdqali/clojure-dojo&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A simple JMeter test with login</title>
      <link>http://sdqali.in/blog/2014/02/17/a-simple-jmeter-test-with-login/</link>
      <pubDate>Mon, 17 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/02/17/a-simple-jmeter-test-with-login/</guid>
      <description>

&lt;p&gt;I had to set up a JMeter test last week - the test included logging in to a site, and then hitting a bunch of URLs, all of them being GET requests. I found it hard to find a simple documentation that described how to do this - the ones I found were either incomplete or were trying to teach me a large number of things at the same time. So when I figured it out, I decided to write this down, for anyone else finding themselves in the same place as me.&lt;/p&gt;

&lt;p&gt;For this example, the application under test is a simple Rails application, with the login form at &lt;code&gt;/login&lt;/code&gt; and a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/login&lt;/code&gt; does the authentication.&lt;/p&gt;

&lt;h3 id=&#34;add-a-thread-group:432050f6a9a1f05bac0d71354129b823&#34;&gt;Add a Thread Group&lt;/h3&gt;

&lt;p&gt;A Thread Group defines a pool of users that will execute a particular test case against the server. JMeter makes the number of users, and the ramp-rate configurable. For the purpose of this example, Number of Threads is 2 and the ramp up time period is 1 second. This thread group is also configured to run forever.
&lt;img src=&#34;http://sdqali.in/images/jmeter/thread_group.png&#34; alt=&#34;Thread Group&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;http-request-defaults:432050f6a9a1f05bac0d71354129b823&#34;&gt;HTTP Request Defaults&lt;/h3&gt;

&lt;p&gt;The net step is to add an HTTP Request Defaults configuration element to the Thread Group. This configuration element sets up the domain or I.P. address of the server, the port and the protocol (HTTP / HTTPS). In this example, Server Name is &lt;code&gt;127.0.0.1&lt;/code&gt; and Port is &lt;code&gt;3000&lt;/code&gt;.
&lt;img src=&#34;http://sdqali.in/images/jmeter/request_defaults.png&#34; alt=&#34;HTTP Request Defaults&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;http-cookie-manager:432050f6a9a1f05bac0d71354129b823&#34;&gt;HTTP Cookie Manager&lt;/h3&gt;

&lt;p&gt;A cookie manager stores and sends cookies, as a web browser would do if an actual user was hitting the server. For the purposes of this example, the default configurations are enough.
&lt;img src=&#34;http://sdqali.in/images/jmeter/cookie_manager.png&#34; alt=&#34;Cookie Manager&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;implement-normal-page-actions:432050f6a9a1f05bac0d71354129b823&#34;&gt;Implement normal page actions&lt;/h3&gt;

&lt;p&gt;From this point, all that remains is to implement HTTP Requests to the end points that are relevant to this test. In this example, we navigate to the Login page at &lt;code&gt;/login&lt;/code&gt;, fire a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/login&lt;/code&gt; with the appropriate form input values and proceed to the Admin page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The SNDP - NSS political experiment of 1980s</title>
      <link>http://sdqali.in/blog/2014/02/09/the-sndp---nss-political-experiment-of-1980s/</link>
      <pubDate>Sun, 09 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/02/09/the-sndp---nss-political-experiment-of-1980s/</guid>
      <description>&lt;p&gt;Last week, at the annual congregation the Sree Narayana Dharma Paripalana (S.N.D.P.) Yogam, it&amp;rsquo;s leaders - Vellaapalli Nadesan and his son Thushaar  announced that S.N.D.P. is about to form their own political party that will unite Hindus of Kerala under one umbrella. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:89739ec58dfe85f6340b4ae3a94dd0f3:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:89739ec58dfe85f6340b4ae3a94dd0f3:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; S.N.D.P. and it&amp;rsquo;s leaders are no strangers to threatening to announce their intent to form a political party. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:89739ec58dfe85f6340b4ae3a94dd0f3:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:89739ec58dfe85f6340b4ae3a94dd0f3:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; They did the same in 2012, generating much talk in Kerala&amp;rsquo;s political landscape. The latest announcement is likely to suffer the same fate as these earlier announcements. To understand why S.N.D.P. is highly unlikely to form a party of their own, one needs to look at the time when they indeed had their own political party - to the late 1970s and the 1980 election to the Kerala legislature.&lt;/p&gt;

&lt;p&gt;The Socialist Republican Party (S.R.P.) formed in 1976 with the blessings of the Yogam and the almost farcical level of communal politics that resulted in, helped in huge amounts by the Nair Service Society (N.S.S.) forming the National Democratic Party (N.D.P.) offers a great lesson in the often communal nature of class politics in Kerala and how the constant on the other side of the aisle - the Left - reacts to it.&lt;/p&gt;

&lt;p&gt;1970s was a torrid time period in the political landscape in Kerala. Achutha Menon&amp;rsquo;s C.P.I.-led government ruled for 8 years from 1969 - the longest term any one has ruled Kerala for. Menon&amp;rsquo;s C.P.I. ruled with the help of the Indian National Congress, the Kerala Congress and the Indian Union Muslim League (I.U.M.L.). In the slug fest going on between the C.P.I. and the C.P.I.(M) after the Communist party&amp;rsquo;s split down the middle, the Church stood with the C.P.I., reluctantly siding with the same people against whom they led annual processions from the St. George Forane Church, where the martyrs of the police shooting of 1957 are buried. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:89739ec58dfe85f6340b4ae3a94dd0f3:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:89739ec58dfe85f6340b4ae3a94dd0f3:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; INC had started distancing from communal politics and this meant that the S.N.D.P. and the N.S.S. were left without political parties willing to carry their flags. And they decided to change it. N.S.S.&amp;rsquo;s National Democratic Party (N.D.P.) was formed in 1974, immediately followed by S.N.D.P.&amp;rsquo;s Socialist Republican Party (S.R.P.) in 1976.&lt;/p&gt;

&lt;p&gt;It is worth noticing that these announcements came in the aftermath of the agitation led by the Ezhava, Nair and Christian communities against the State&amp;rsquo;s Education Bill aimed by ending corruption and bringing parity to the appointment of teachers in colleges.&lt;/p&gt;

&lt;p&gt;In 1979, after Achutha Menon had stepped down and infighting in Congress led to two governments that lasted only 11 months, another temporary alliance took over governance under I.U.M.L.&amp;rsquo;s Muhammed Koya and his cabinet comprised of a member of the N.D.P. This marriage of convenience made The Hindu remark in an editorial
&amp;gt; The frontmen have so far been drawn from forces who were communal and sectarian in their own local right and specialise in making an appeal to primordial sentiments. The new gang up, which is likely to prove shortlived is an abomination thrust up on the people of Kerala.&lt;/p&gt;

&lt;p&gt;As predicted by The Hindu, the government lasted only 2 months and the State went to an early election in January of 1980. But by this time, something very important had happened. The C.P.I. and the C.P.I.(M) had decided to consolidate under a grand Left Democratic Front and this meant that the Congress found themselves in the United Democratic Front with such parties as the Kerala Congress, the N.D.P. and the S.R.P. In the election, the electorate firmly voted for the Left&amp;rsquo;s coalition and both S.R.P. and the N.D.P. failed miserably. The L.D.F. won 93 of the 140 seats and 50.04 per cent of the votes, while the U.D.F. won 46 seats and 40.10 per cent of the votes. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:89739ec58dfe85f6340b4ae3a94dd0f3:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:89739ec58dfe85f6340b4ae3a94dd0f3:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;The communal appeal of the U.D.F. was glaringly obvious and it was too much for the electorate to digest. The Ezhava voters that S.R.P. thought would form it&amp;rsquo;s base voted for the Left. It is also worth noting that a large per cent of (nearly 60%) of labourers belonging to the upper caste Nair community and the lower caste Ezhava community were members of the Left parties. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:89739ec58dfe85f6340b4ae3a94dd0f3:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:89739ec58dfe85f6340b4ae3a94dd0f3:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; The S.R.P. and N.D.P. experiments lost their momentum and went through splits before being politically irrelevant by the end of 1980s.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:89739ec58dfe85f6340b4ae3a94dd0f3:1&#34;&gt;SNDP makes political plans clear. &lt;a href=&#34;http://www.thehindu.com/news/national/kerala/sndp-makes-political-plans-clear/article5639766.ece&#34;&gt;The Hindu, February 1, 2014&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:89739ec58dfe85f6340b4ae3a94dd0f3:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:89739ec58dfe85f6340b4ae3a94dd0f3:2&#34;&gt;SNDP Yogam to launch Hindu party. &lt;a href=&#34;http://www.thehindu.com/todays-paper/tp-national/tp-kerala/sndp-yogam-to-launch-hindu-party/article3608451.ece&#34;&gt;The Hindu, July 6, 2012&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:89739ec58dfe85f6340b4ae3a94dd0f3:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:89739ec58dfe85f6340b4ae3a94dd0f3:3&#34;&gt;During the liberation struggle against the first Communist government of Kerala, a police shooting resulted in the death of seven followers of the Roman Catholic Church in Angamaly. The seven martyrs of the Church were buried in a common tomb at the cemetery of St. George Forane Church at Angamaly. The Church&amp;rsquo;s famous slogan &lt;em&gt;Angamali kallarayil, njangade sawdharaanakkil, aa kallarayanu kattayyam, pakaram njangal choodikkum&lt;/em&gt; (If it is indeed our Brothers who sleep in the tomb at Angamaly, that tomb be witness, we will have our revenge.) originated after this incident.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:89739ec58dfe85f6340b4ae3a94dd0f3:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:89739ec58dfe85f6340b4ae3a94dd0f3:4&#34;&gt;The Official Webportal of the Government of Kerala - &lt;a href=&#34;http://kerala.gov.in/index.php?option=com_content&amp;amp;view=article&amp;amp;id=3776:history-of-kerala-legislature&#34;&gt;History of the Kerala Legislature&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:89739ec58dfe85f6340b4ae3a94dd0f3:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:89739ec58dfe85f6340b4ae3a94dd0f3:5&#34;&gt;George Mathew - Communal Road to a Secular Kerala. Concept Publishing Company, Jan 1, 1989.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:89739ec58dfe85f6340b4ae3a94dd0f3:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What is life?</title>
      <link>http://sdqali.in/blog/2013/12/10/what-is-life/</link>
      <pubDate>Tue, 10 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/12/10/what-is-life/</guid>
      <description>&lt;p&gt;Life is the heap of broken pieces of crayons adjacent to that heap of broken pieces of your heart, laying by the heap of bills eclipsing the heap of paychecks and all that was lost while you were busy working hard to create those piles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A rainy distraction</title>
      <link>http://sdqali.in/blog/2013/11/21/a-rainy-distraction/</link>
      <pubDate>Thu, 21 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/11/21/a-rainy-distraction/</guid>
      <description>&lt;p&gt;Far away, the Sutro TV tower was hardly visible in the haze of rain.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;So, this is what you were talking about in the morning? I thought it was the other calculation. You are right!&amp;rdquo;. You suddenly feel happy and detect the smugness creeping to your face. I was right, I told you so, you want to say. But you don&amp;rsquo;t. &amp;ldquo;Not today! The smugness will have to die.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;As the thick rain drops fall on your naked torso, causing that ever so little note of pain that you have come to like and seek, you roll the muddy football under your feet and look up. Hands go up on the right flank and the young lad hugging his touch line is impatient and the wave of his hands are frantic. You turn your head and survey the left flank. Nothing going there, you quickly realise.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;We should focus on the lazy load. That will give us more boost.&amp;rdquo; You node and look away, to the beads of rain crawling down the window pane.&lt;/p&gt;

&lt;p&gt;The lofted ball is a tough one when playing in mud and rain, and you know you have to make that extra push. So you dig deeper, connect your instep with the ball and push a little bit harder. The ball flies, over the old man caught in the middle; and the expression on the face of the young lad on the right flank changes from frantic impatience to anticipation. And then you feel the warm body behind you.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;So do you think we should go ahead with the first approach?&amp;rdquo;. You turn in your chair, nod again and notice that the rain is in full fury over the Bay.&lt;/p&gt;

&lt;p&gt;As the ball flies away and you begin to turn and run, you feel the cold hard foot of the lad behind you on your right calf muscle. You feel the pain and turn to face him. &amp;ldquo;Oh, that lad! He always has his knives out when he plays against me.&amp;rdquo;, you realise. It is okay. He smiles, and you smile back and run away to the centre.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Hmmm&amp;hellip; this does not look like the right approach. What do you think?&amp;rdquo; You try harder to snap back from that Monsoon day in the paddy field and offer your opinion. It is cold and you notice that water on the roof is starting to flow.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Not today. I don&amp;rsquo;t want to have an argument today&amp;rdquo;. He tackled, he tackled late, and he probably did it deliberately. It is okay - because it is June, it is raining like mad and you are in a muddy paddy field, playing football. Over on the right flank, the cousin lunges in with a sliding tackle and completely misses the player and the ball. He goes sliding in the mud, and it is a pretty sight. The sister-in-law would not be happy though and when we get back she will glare at him - glares of disapproval. Why do grown up men do this? And then as you try to avoid eye contact with her, her glare would have asked you &amp;ldquo;Is this what you fly half way across the world for?&amp;rdquo;. You will smile that nervous smile and nod uneasily. &amp;ldquo;Not today sister&amp;hellip; I am not going to argue with you!&amp;rdquo;. For it is June and it is raining&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;I think we are stuck. What do you think we should do?&amp;rdquo;. You painfully realise that the present wants you back. Damn!&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Hey, let&amp;rsquo;s step back and look at it again. We will sort it out!&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The fear of being wrong on the Internet</title>
      <link>http://sdqali.in/blog/2013/10/15/the-fear-of-being-wrong-on-the-internet/</link>
      <pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/10/15/the-fear-of-being-wrong-on-the-internet/</guid>
      <description>&lt;p&gt;All of us have opinions-some strong, some weak; some we care deeply about, some we couldn&amp;rsquo;t care less. We often express those opinions to others and sometimes people agree, sometimes they don&amp;rsquo;t. Debating with others about our opinions helps us crystallise or completely discard them.&lt;/p&gt;

&lt;p&gt;I am fairly opinionated about a lot of things and have debates about them with friends and co-workers. Yet when it comes to opinions on the Internet, I shy away. Every single day, I come across issues and incidents about which I have opinions and every time I stare at what somebody else wrote, consider replying and ultimately close the tab after a minute. This happens on almost all the Internet communities I frequent - Twitter, Guardian&amp;rsquo;s Comment is Free, Guardian&amp;rsquo;s Football blogs and Hacker News.&lt;/p&gt;

&lt;p&gt;I have lately been thinking why this is happening to me and I realise that the root of this is my fear of being wrong on the Internet. Now, I am wrong a lot of the time. I have been wrong in the past and like most of humanity, I will be on occasions in the future. I am not afraid of it. In real life arguments outside the Internet, when you are wrong, people will point out what part of an argument you are wrong about and why.&lt;/p&gt;

&lt;p&gt;During pretty much all the debates I have in real life, we disagree. From issues as wide as programming languages, to tech conferences to the nature of federalism in India, we mostly disagree. At lunch tables, bars, Friday nights in restaurants, we disagree. We disagree to the point where we will be visibly upset. And yet, in the end, we shake hands, hug each other, finish our drinks or dinners and go our way. And invariably both sides would have learned from each other in the duration of the debate.&lt;/p&gt;

&lt;p&gt;On the Internet, things are different. It is extremely hard to express certain things in writing, especially on a forum where the pace of the debate is intense and there is a churn of people and acceptance levels. The fact that written conversation lacks any tone does not help one bit. People have to assume each other&amp;rsquo;s motivations and perspective and it leads to snide and caustic replies followed by more snide and caustic replies. And when there is enough quorum for a lynch mob, the person who has the minority opinion gets textually beaten up. And in the end, everyone goes their own way, without patching up and not having learned anything from each other.&lt;/p&gt;

&lt;p&gt;Now there are homogeneous communities where this does not happen often. People mostly get along and try to tackle the debate and not the man. But when that one person with an opinions countering the majority&amp;rsquo;s turns up, the debate takes a back seat and the regulars go in studs up and tackles the person instead of his debate which is oftentimes requires less energy to prove wrong than abusing the person expressing the opinion.&lt;/p&gt;

&lt;p&gt;While a teenager the average YouTube comment thread will lead with &amp;ldquo;You are a faggot!&amp;rdquo; in reply to an opinion he disagrees with, places and people who consider themselves learned and sophisticated lead with comments of the &amp;ldquo;Oh, at least you can spell!&amp;rdquo; genre. Neither helps in expressing disagreement with the opinion, all the while being dangerously effective at expressing one&amp;rsquo;s displeasure for the person with the opinion.&lt;/p&gt;

&lt;p&gt;Having said this, I still frequent these forums because I still learn a lot of things from people there. I am mostly a silent lurker and I think I will continue to be, in the near future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implementing Rate Limiting in Rails - Part 2</title>
      <link>http://sdqali.in/blog/2013/10/13/implementing-rate-limiting-in-rails---part-2/</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/10/13/implementing-rate-limiting-in-rails---part-2/</guid>
      <description>

&lt;p&gt;&lt;em&gt;The first part of this series can be found &lt;a href=&#34;http://sdqali.in/blog/2013/10/12/implementing-rate-limiting-in-rails-part-1/&#34;&gt;here&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The first part of this series looked at how to implement basic rate limiting in a Rails application. However, as pointed out in the improvements section, the implementation was not complete - it did not provide clients enough information about the rate limiting that is in place and how long they should wait before making further requests once they hit the limit.&lt;/p&gt;

&lt;p&gt;In order to tell the client about the rate limit parameters, the mechanism needs to be able to set headers on the response. While a &lt;code&gt;before_filter&lt;/code&gt; is useful to limit the requests, it can not change the response from a valid request. One could use an &lt;code&gt;after_filter&lt;/code&gt; to achieve this, but a Rack middleware &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5795a64758d23be8c42855c9ecf34170:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5795a64758d23be8c42855c9ecf34170:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is a more suitable solution given that middlewares can act up on a request as well as the response generated by the application for that request.&lt;/p&gt;

&lt;p&gt;We will need to comment out the &lt;code&gt;before_filter&lt;/code&gt; that was introduced in Part 1. Then we will define a blank middleware and wire it up. The convention is to define middlwares in &lt;code&gt;app/middleware&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
# app/middleware/rate_limit.rb

class RateLimit
  def initialize(app)
    @app = app
  end

  def call(env)
    @app.env
  end
end

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This middleware is wired up as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;
# config/application.rb

class Application &amp;lt; Rails::Application
  ...
  config.middleware.use &amp;quot;RateLimit&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;basic-rate-limiting:5795a64758d23be8c42855c9ecf34170&#34;&gt;Basic Rate Limiting&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s re-implement what we implemented in Part 1 using the middleware.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  def call(env)
    client_ip = env[&amp;quot;REMOTE_ADDR&amp;quot;]
    key = &amp;quot;count:#{client_ip}&amp;quot;
    count = REDIS.get(key)
    unless count
      REDIS.set(key, 0)
      REDIS.expire(key, THROTTLE_TIME_WINDOW)
    end

    if count.to_i &amp;gt;= THROTTLE_MAX_REQUESTS
      [
       429,
       {},
       [message]
      ]
    else
      REDIS.incr(key)
      @app.call(env)
    end
  end

  private
  def message
    {
      :message =&amp;gt; &amp;quot;You have fired too many requests. Please wait for some time.&amp;quot;
    }.to_json
  end

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;rate-limit-status:5795a64758d23be8c42855c9ecf34170&#34;&gt;Rate limit status&lt;/h3&gt;

&lt;p&gt;There are various header conventions for providing a client it&amp;rsquo;s rate limit status. For this example, we will use the convention that GitHub &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5795a64758d23be8c42855c9ecf34170:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5795a64758d23be8c42855c9ecf34170:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and Twitter &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5795a64758d23be8c42855c9ecf34170:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5795a64758d23be8c42855c9ecf34170:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; use. The following headers represent the rate limit status:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X-RateLimit-Limit&lt;/code&gt; - The maximum number of requests that the client is permitted to make in the time window.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-RateLimit-Remaining&lt;/code&gt; - The number of requests remaining in the current rate limit window.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-RateLimit-Reset&lt;/code&gt; - The time at which the current rate limit window resets in UTC epoch seconds &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5795a64758d23be8c42855c9ecf34170:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5795a64758d23be8c42855c9ecf34170:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The middleware will set these headers for all requests with the following change:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  def call(env)
    client_ip = env[&amp;quot;REMOTE_ADDR&amp;quot;]
    key = &amp;quot;count:#{client_ip}&amp;quot;
    count = REDIS.get(key)
    unless count
      REDIS.set(key, 0)
      REDIS.expire(key, THROTTLE_TIME_WINDOW)
    end

    if count.to_i &amp;gt;= THROTTLE_MAX_REQUESTS
      [
       429,
       rate_limit_headers(count, key),
       [message]
      ]
    else
      REDIS.incr(key)
      status, headers, body = @app.call(env)
      [
       status,
       headers.merge(rate_limit_headers(count.to_i + 1, key)),
       body
      ]
    end
  end

  private
  def message
    {
      :message =&amp;gt; &amp;quot;You have fired too many requests. Please wait for some time.&amp;quot;
    }.to_json
  end

  def rate_limit_headers(count, key)
    ttl = REDIS.ttl(key)
    time = Time.now.to_i
    time_till_reset = (time + ttl.to_i).to_s
    {
      &amp;quot;X-Rate-Limit-Limit&amp;quot; =&amp;gt;  &amp;quot;60&amp;quot;,
      &amp;quot;X-Rate-Limit-Remaining&amp;quot; =&amp;gt; (60 - count.to_i).to_s,
      &amp;quot;X-Rate-Limit-Reset&amp;quot; =&amp;gt; time_till_reset
    }
  end

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This computes the time remaining till the limit is reset and the number of requests remaining and sets the appropriate headers.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s test this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash$ for i in {1..100}
do
curl -i http://localhost:3000/foo.json &amp;gt;&amp;gt; /tmp/headers.log
done

bash$ less /tmp/headers.log | grep X-Rate-Limit
X-Rate-Limit-Limit: 60
X-Rate-Limit-Remaining: 59
X-Rate-Limit-Reset: 1381717125
X-Rate-Limit-Limit: 60
X-Rate-Limit-Remaining: 58
X-Rate-Limit-Reset: 1381717125
...
X-Rate-Limit-Limit: 60
X-Rate-Limit-Remaining: 1
X-Rate-Limit-Reset: 1381717124
X-Rate-Limit-Limit: 60
X-Rate-Limit-Remaining: 0
X-Rate-Limit-Reset: 1381717124
X-Rate-Limit-Limit: 60
X-Rate-Limit-Remaining: 0
X-Rate-Limit-Reset: 1381717124
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code for this implementation is on my &lt;a href=&#34;https://github.com/sdqali/rails_throttle&#34;&gt;GitHub profile&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:5795a64758d23be8c42855c9ecf34170:1&#34;&gt;RailsCast &lt;a href=&#34;http://railscasts.com/episodes/151-rack-middleware&#34;&gt;#151 - Rack Middleware&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5795a64758d23be8c42855c9ecf34170:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5795a64758d23be8c42855c9ecf34170:2&#34;&gt;GitHub API V3 - &lt;a href=&#34;http://developer.github.com/v3/#rate-limiting&#34;&gt;Rate limiting&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5795a64758d23be8c42855c9ecf34170:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5795a64758d23be8c42855c9ecf34170:3&#34;&gt;Twitter - &lt;a href=&#34;https://dev.twitter.com/docs/rate-limiting/1.1&#34;&gt;REST API Rate Limiting in v1.1&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5795a64758d23be8c42855c9ecf34170:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5795a64758d23be8c42855c9ecf34170:4&#34;&gt;Wikipedia - Unix time - &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time#Encoding_time_as_a_number&#34;&gt;Encoding time as a number&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5795a64758d23be8c42855c9ecf34170:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Implementing Rate Limiting in Rails - Part 1</title>
      <link>http://sdqali.in/blog/2013/10/12/implementing-rate-limiting-in-rails---part-1/</link>
      <pubDate>Sat, 12 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/10/12/implementing-rate-limiting-in-rails---part-1/</guid>
      <description>

&lt;p&gt;&lt;em&gt;The second part of this series can be found &lt;a href=&#34;http://sdqali.in/blog/2013/10/13/implementing-rate-limiting-in-rails-part-2/&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Rate limiting or throttling is the practice of limiting how frequently legitimate users of a web service can access the service. Rate limiting is often put in place to prevent the hogging of resources by a sub set of the users of the system. Rate limiting works by responding with error messages when a client exceeds their allocated share of requests within a predefined time window. In addition to the error message, the response should also include information as to when rate limit will be reset so that the client can continue accessing the system after the reset.&lt;/p&gt;

&lt;p&gt;What we need is a way to record the number of requests each client is making and reset this number to zero after a predefined time period and decide for each request whether the client making the request has exceeded the limits.&lt;/p&gt;

&lt;h3 id=&#34;the-test-application:05fdaa963770121a9f6ab535e38c3f13&#34;&gt;The test application&lt;/h3&gt;

&lt;p&gt;We will create a simple Rails application with a single API endpoint at &lt;code&gt;foo.json&lt;/code&gt;. The code needed for this is as follows:&lt;/p&gt;

&lt;p&gt;Routes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/routes.rb

RailsThrottle::Application.routes.draw do
  get &#39;foo.json&#39; =&amp;gt; &#39;foo#index&#39;
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The controller:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/foo_controller.rb

class FooController &amp;lt; ApplicationController
  def index
    render json: {foo: :bar}
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;storing-the-rate-data:05fdaa963770121a9f6ab535e38c3f13&#34;&gt;Storing the rate data&lt;/h3&gt;

&lt;p&gt;We need a place to store each client&amp;rsquo;s IP address and the number of requests it made. We need to increment this count for each request and reset the count to zero after a time period. Considering these needs, &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt; is a great fit for this data store. Redis stores key value pairs and allows expiry time to be specified for each entry. Redis also comes with an &lt;code&gt;INCR&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:05fdaa963770121a9f6ab535e38c3f13:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:05fdaa963770121a9f6ab535e38c3f13:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; command that ensures that increment operations are atomic. This will be useful to us if we were to run multiple instances of our app behind a load balancer.&lt;/p&gt;

&lt;p&gt;To setup the application to use Redis, we will need to install the &lt;code&gt;redis&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:05fdaa963770121a9f6ab535e38c3f13:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:05fdaa963770121a9f6ab535e38c3f13:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; gem. Once we have the gem, we will add a new &lt;code&gt;initializer&lt;/code&gt; named &lt;code&gt;throttle.rb&lt;/code&gt; which configures our Redis client.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/initializers/throttle.rb

require &amp;quot;redis&amp;quot;

redis_conf  = YAML.load(File.join(Rails.root, &amp;quot;config&amp;quot;, &amp;quot;redis.yml&amp;quot;))
REDIS = Redis.new(:host =&amp;gt; redis_conf[&amp;quot;host&amp;quot;], :port =&amp;gt; redis_conf[&amp;quot;port&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will load the Redis server&amp;rsquo;s host and port from the configuration file located at &lt;code&gt;config/redis.yml&lt;/code&gt;. This file will look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# config/redis.yml

host: localhost
port: 6379
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;using-a-before-filter-for-rate-limiting:05fdaa963770121a9f6ab535e38c3f13&#34;&gt;Using a &lt;code&gt;before_filter&lt;/code&gt; for rate limiting.&lt;/h3&gt;

&lt;p&gt;The first step is to log the number of requests each client is making. This can easily be achieved with a &lt;code&gt;before_filter&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:05fdaa963770121a9f6ab535e38c3f13:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:05fdaa963770121a9f6ab535e38c3f13:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. Let&amp;rsquo;s add the filter into the &lt;code&gt;ApplicationController&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/application_controller.rb

class ApplicationController &amp;lt; ActionController::Base
  ...

  before_filter :throttle

  def throttle
    client_ip = request.env[&amp;quot;REMOTE_ADDR&amp;quot;]
    key = &amp;quot;count:#{client_ip}&amp;quot;
    count = REDIS.get(key)

    unless count
      REDIS.set(key, 0)
    end
    REDIS.incr(key)
    true
  end

  ...
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since this &lt;code&gt;before_filter&lt;/code&gt; belongs to the &lt;code&gt;ApplicationController&lt;/code&gt;, it will be applied to all requests, unless a specific controller chooses to skip it. So before every request is processed, the filter grabs the client&amp;rsquo;s IP and checks whether there is a count in Redis for this IP. If there is no count key, it creates one. Finally it increments the count.&lt;/p&gt;

&lt;p&gt;At this point, the filter just records the requests made, but does not limit requests. Let&amp;rsquo;s go ahead and implement limiting. We need to specify the time window for rate limiting and how many requests should be allowed in that time window. We will allow a client a maximum of &lt;code&gt;60&lt;/code&gt; requests in &lt;code&gt;15&lt;/code&gt; minutes. The following constants need to be defined in &lt;code&gt;throttle.rb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;THROTTLE_TIME_WINDOW = 15 * 60
THROTTLE_MAX_REQUESTS = 60
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The filter needs to be changed to respond with error messages when the rate limit is exceeded.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/application_controller.rb

class ApplicationController &amp;lt; ActionController::Base
  ...

  before_filter :throttle

  def throttle
    client_ip = request.env[&amp;quot;REMOTE_ADDR&amp;quot;]
    key = &amp;quot;count:#{client_ip}&amp;quot;
    count = REDIS.get(key)

    unless count
      REDIS.set(key, 0)
      REDIS.expire(key, THROTTLE_TIME_WINDOW)
      return true
    end

    if count.to_i &amp;gt;= THROTTLE_MAX_REQUESTS
      render :status =&amp;gt; 429, :json =&amp;gt; {:message =&amp;gt; &amp;quot;You have fired too many requests. Please wait for some time.&amp;quot;}
      return
    end
    REDIS.incr(key)
    true
  end

  ...
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the limit is reached, subsequent requests will be responded with an error message and the HTTP status code &lt;code&gt;429&lt;/code&gt;. The 429 &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:05fdaa963770121a9f6ab535e38c3f13:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:05fdaa963770121a9f6ab535e38c3f13:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; status code indicates that the user has sent too many requests in a given amount of time.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s go ahead and test this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash$ for i in {1..100}
do
curl -i http://localhost:3000/foo.json &amp;gt;&amp;gt; /dev/null
done

bash$ less log/development.log | grep &amp;quot;200 OK&amp;quot; | wc -l
      60

bash$ less log/development.log | grep &amp;quot;429 Too Many Requests&amp;quot; | wc -l
      40

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see after &lt;code&gt;60&lt;/code&gt; requests, all requests get the &lt;code&gt;429&lt;/code&gt; response.&lt;/p&gt;

&lt;h3 id=&#34;improvements:05fdaa963770121a9f6ab535e38c3f13&#34;&gt;Improvements&lt;/h3&gt;

&lt;p&gt;While what we have implemented limits the requests, it does not give the client enough information as to how long it has to wait before making requests again. It would also be helpful if the server tells the client on each request how many total requests it is allowed to make in a window and how many more requests it can perform before limiting kicks in. We will look at this in the next blog post.&lt;/p&gt;

&lt;p&gt;A sample application with this rate limiting in place is on &lt;a href=&#34;https://github.com/sdqali/rails_throttle/tree/filter&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:05fdaa963770121a9f6ab535e38c3f13:1&#34;&gt;&lt;a href=&#34;http://redis.io/commands/incr&#34;&gt;Redis documentation&lt;/a&gt; for INCR command.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:05fdaa963770121a9f6ab535e38c3f13:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:05fdaa963770121a9f6ab535e38c3f13:2&#34;&gt;&lt;a href=&#34;https://rubygems.org/gems/redis&#34;&gt;redis&lt;/a&gt; - A Ruby client that tries to match Redis&amp;rsquo; API one-to-one, while still providing an idiomatic interface. It features thread-safety, client-side sharding, pipelining, and an obsession for performance.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:05fdaa963770121a9f6ab535e38c3f13:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:05fdaa963770121a9f6ab535e38c3f13:3&#34;&gt;Rails&amp;rsquo; &lt;a href=&#34;http://apidock.com/rails/AbstractController/Callbacks/ClassMethods/before_filter&#34;&gt;before filter&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:05fdaa963770121a9f6ab535e38c3f13:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:05fdaa963770121a9f6ab535e38c3f13:4&#34;&gt;IETF: Additional HTTP Status Codes - &lt;a href=&#34;https://tools.ietf.org/html/rfc6585#section-4&#34;&gt;429 Too Many Requests&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:05fdaa963770121a9f6ab535e38c3f13:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python Hack - Dynamically override an object&#39;s attribute</title>
      <link>http://sdqali.in/blog/2013/10/07/python-hack---dynamically-override-an-objects-attribute/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/10/07/python-hack---dynamically-override-an-objects-attribute/</guid>
      <description>

&lt;p&gt;While working with Locust &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:66b6e5fb09b6083bed97b4d7a2981cc2:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:66b6e5fb09b6083bed97b4d7a2981cc2:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; recently, we ran into a situation where we had to dynamically override an attribute in a class in the Locust library so as to control what value it got assigned. After a lot of scratching our heads and reading the Python documentation, we came across the &lt;code&gt;property&lt;/code&gt; function. We were able to use this to hack together a solution that ensures that every time an attribute is read, it returns the result of executing a method.&lt;/p&gt;

&lt;p&gt;The following example demonstrates a stripped down version of this hack.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import random

class Foo(object):
    bar = random.random()

foo = Foo()

# Prints the value assigned when the Foo object is initialised.
print(&amp;quot;Before override&amp;quot;)
print(foo.bar)
print(foo.bar)

# Override
Foo.bar = property(lambda self: random.random())

print(&amp;quot;After override&amp;quot;)
print(foo.bar)
print(foo.bar)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This snippet when executed will output the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Before override
0.0373028550804
0.0373028550804
After override
0.603160033663
0.501455108419
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It can be seen that before introducing the override, the value of the &lt;code&gt;bar&lt;/code&gt; attribute is set when the class is initialised and as expected, it does not change how many ever times the attribute is read. However, after the override, the attribute is assigned a new value every time it is read.&lt;/p&gt;

&lt;h2 id=&#34;how-does-this-work:66b6e5fb09b6083bed97b4d7a2981cc2&#34;&gt;How does this work?&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;property()&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:66b6e5fb09b6083bed97b4d7a2981cc2:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:66b6e5fb09b6083bed97b4d7a2981cc2:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; function returns an attribute for any class. It allows the creation of Ruby&amp;rsquo;s &lt;code&gt;attr_accessor&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:66b6e5fb09b6083bed97b4d7a2981cc2:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:66b6e5fb09b6083bed97b4d7a2981cc2:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; style attributes on classes so that one can write &lt;code&gt;instance.attrib&lt;/code&gt; to read an attribute value and &lt;code&gt;instance.attrib=&lt;/code&gt; to set an attribute value. What line &lt;code&gt;14&lt;/code&gt; in the snippet does is to re-define the &lt;code&gt;bar&lt;/code&gt; attribute to be a property whose &lt;code&gt;getter&lt;/code&gt; is a &lt;code&gt;lambda&lt;/code&gt;. Every time the &lt;code&gt;bar&lt;/code&gt; attribute is read, the &lt;code&gt;lambda&lt;/code&gt; gets executed.&lt;/p&gt;

&lt;p&gt;A more comprehensive example of this can be found in my &lt;a href=&#34;https://github.com/sdqali/python_dojo/blob/master/dynamic_override/dynamic_override.py&#34;&gt;Python dojo repository&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:66b6e5fb09b6083bed97b4d7a2981cc2:1&#34;&gt;&lt;a href=&#34;http://locust.io/&#34;&gt;Locust&lt;/a&gt; - a modern load testing framework.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:66b6e5fb09b6083bed97b4d7a2981cc2:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:66b6e5fb09b6083bed97b4d7a2981cc2:2&#34;&gt;Python&amp;rsquo;s built-in functions - &lt;a href=&#34;http://docs.python.org/2/library/functions.html#property&#34;&gt;property&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:66b6e5fb09b6083bed97b4d7a2981cc2:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:66b6e5fb09b6083bed97b4d7a2981cc2:3&#34;&gt;Ruby&amp;rsquo;s &lt;a href=&#34;http://www.ruby-doc.org/core-1.9.3/Module.html#method-i-attr_accessor&#34;&gt;&lt;code&gt;attr_accessor&lt;/code&gt; method&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:66b6e5fb09b6083bed97b4d7a2981cc2:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Fitting an Image in to a Canvas object</title>
      <link>http://sdqali.in/blog/2013/10/03/fitting-an-image-in-to-a-canvas-object/</link>
      <pubDate>Thu, 03 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2013/10/03/fitting-an-image-in-to-a-canvas-object/</guid>
      <description>

&lt;p&gt;I have been playing around with Canvas objects and images for a side project I am doing. One of the first things I had to figure out for this project was how to fit an image of arbitrary height and width on to a Canvas object of arbitrary, but known dimensions while preserving the aspect ratios of the image. This blog post is an explanation of the solution I came up with for this.&lt;/p&gt;

&lt;h3 id=&#34;the-problem:c1bd9e28bca075d1cce32fa541019ef4&#34;&gt;The problem&lt;/h3&gt;

&lt;p&gt;The application has a Canvas object on which it needs to draw arbitrary images. The Canvas&amp;rsquo;s dimensions are set to &lt;strong&gt;450px&lt;/strong&gt; by &lt;strong&gt;300px&lt;/strong&gt;. The image that needs to be drawn will have unknown aspect ratio. The ideal case will be when the image&amp;rsquo;s aspect ratio is &lt;strong&gt;3:2&lt;/strong&gt;, just like the canvas. In this case, there is no need for any adjustments to be made and the image can be drawn like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var canvas = document.getElementById(&#39;canvas&#39;);
var context = canvas.getContext(&#39;2d&#39;);
var imageObj = new Image();
imageObj.onload = function() {
	context.drawImage(imageObj, 0, 0, canvas.width, canvas.height);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But fitting images with aspect ratios different from the Canvas can be a little tricky. The fundamental problem here is that when aspect ratio is different, there is only one pair of edges-either vertical or horizontal-that can be fitted on to the canvas. The image will have to be placed in the center along the other axis. The following diagram illustrates this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://sdqali.in/images/canvas_fitting.png&#34; alt=&#34;Canvas fitting&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Since fitting depends on the aspect ratio, the code should take it into consideration. The following code compares the ratios and chooses to fit the image horizontally or vertically.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var canvas = document.getElementById(&#39;canvas&#39;);
var context = canvas.getContext(&#39;2d&#39;);
var imageObj = new Image();

var fitImageOn = function(canvas, imageObj) {
	var imageAspectRatio = imageObj.width / imageObj.height;
	var canvasAspectRatio = canvas.width / canvas.height;
	var renderableHeight, renderableWidth, xStart, yStart;

	// If image&#39;s aspect ratio is less than canvas&#39;s we fit on height
	// and place the image centrally along width
	if(imageAspectRatio &amp;lt; canvasAspectRatio) {
		renderableHeight = canvas.height;
		renderableWidth = imageObj.width * (renderableHeight / imageObj.height);
		xStart = (canvas.width - renderableWidth) / 2;
		yStart = 0;
	}

	// If image&#39;s aspect ratio is greater than canvas&#39;s we fit on width
	// and place the image centrally along height
	else if(imageAspectRatio &amp;gt; canvasAspectRatio) {
		renderableWidth = canvas.width
		renderableHeight = imageObj.height * (renderableWidth / imageObj.width);
		xStart = 0;
		yStart = (canvas.height - renderableHeight) / 2;
	}

	// Happy path - keep aspect ratio
	else {
		renderableHeight = canvas.height;
		renderableWidth = canvas.width;
		xStart = 0;
		yStart = 0;
	}
	context.drawImage(imageObj, xStart, yStart, renderableWidth, renderableHeight);
};

imageObj.onload = function() {
	fitImageOn(canvas, imageObj)
};

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A demo of this code in action can be found &lt;a href=&#34;http://sdqali.in/demos/canvas_fitting.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>