<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chrome on {code that works}</title>
    <link>https://sadique.io/tags/chrome/</link>
    <description>Recent content in Chrome on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 29 Nov 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sadique.io/tags/chrome/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My first Firefox plugin: GetCache - View cached version of the current page</title>
      <link>https://sadique.io/blog/2012/11/29/my-first-firefox-plugin-getcache-view-cached-version-of-the-current-page/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2012/11/29/my-first-firefox-plugin-getcache-view-cached-version-of-the-current-page/</guid>
      <description>&lt;p&gt;I released my &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/getcache-ff/&#34;&gt;first Firefox plugin&lt;/a&gt; today. It
is awaiting review, but if you are adventurous, you can install it right
now. Go on, try it.&lt;/p&gt;

&lt;p&gt;After I had written the &lt;a href=&#34;https://sadique.io/blog/2012/11/28/getcache-a-chrome-plugin-to-view-cached-version-of-the-current-page/&#34;&gt;Chrome version&lt;/a&gt; yesterday, &lt;a href=&#34;https://twitter.com/ManishChaks&#34;&gt;Manish&lt;/a&gt; suggested
that I should write one for Firefox. There already exist Firfox plugins
that does exactly what GetCache does, but I decided to go ahead and write it
for fun. And of course, the fact that I could publish it without having
to sign up with my Credit Card information was enticing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GetCache - A Chrome plugin to view cached version of the current page</title>
      <link>https://sadique.io/blog/2012/11/28/getcache-a-chrome-plugin-to-view-cached-version-of-the-current-page/</link>
      <pubDate>Wed, 28 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2012/11/28/getcache-a-chrome-plugin-to-view-cached-version-of-the-current-page/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Download the plugin
&lt;a href=&#34;https://sadique.io/downloads/GetCache.crx&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On numerous occasions, I have ran in to the situation where I had to
look up how to load Google&amp;rsquo;s cached version of a particular page. This
happens often when I follow a link from Hacker News or Reddit to a blog
post and the blog has went down due to the great avalanche of traffic
from HN and Reddit.&lt;/p&gt;

&lt;p&gt;After struggling to remember and having to Google how to get the cached
version, I decided to finally solve this issue. I wrote &lt;code&gt;GetCache&lt;/code&gt;, a
dead simple Google Chrome plugin that loads Google&amp;rsquo;s cached version of
the current page.&lt;/p&gt;

&lt;h2 id=&#34;installing&#34;&gt;Installing&lt;/h2&gt;

&lt;p&gt;You can download the plugin
&lt;a href=&#34;https://sadique.io/downloads/GetCache.crx&#34;&gt;here&lt;/a&gt;. In order to install it, open your
Extensions page (&lt;code&gt;Window -&amp;gt; Extensions&lt;/code&gt;) and drag the downloaded &lt;code&gt;CRX&lt;/code&gt;
file to the page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On REST, Content-Type, Google Chrome and Caching</title>
      <link>https://sadique.io/blog/2012/11/27/on-rest-content-type-google-chrome-and-caching/</link>
      <pubDate>Tue, 27 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2012/11/27/on-rest-content-type-google-chrome-and-caching/</guid>
      <description>&lt;p&gt;Representational State Transfer (REST) is a style of software
architecture for distributed systems that has replaced technologies like
&lt;a href=&#34;http://en.wikipedia.org/wiki/SOAP&#34;&gt;SOAP&lt;/a&gt; as the predominant Web service
design model. Originally proposed by Roy Fielding in his &lt;a href=&#34;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm&#34;&gt;Doctorate
dissertation&lt;/a&gt;,
REST puts a lot of emphasis on resources, their representations and states. Basically a URL indicates a
single resource; the HTTP method (GET, POST, PUT, DELETE) indicates what
action should be performed on that resource; and the ACCEPT header indicates the format that the resource should be presented in.&lt;/p&gt;

&lt;h2 id=&#34;chrome-and-content-type&#34;&gt;Chrome and Content-Type&lt;/h2&gt;

&lt;p&gt;Having seen this, one would assume that if you have a resource, say a
&lt;code&gt;User&lt;/code&gt; on your system and there were two representations of that
resource - HTML and JSON. Let&amp;rsquo;s assume that the HTML representation does
an AJAX call to fetch the JSON representation and renders it. While this
sounds simple enough, Google Chrome, one of the world&amp;rsquo;s most popular
browsers
&lt;a href=&#34;https://code.google.com/p/chromium/issues/detail?id=108766&#34;&gt;totally breaks this&lt;/a&gt;. A
good example of this weird behaviour can be seen &lt;a href=&#34;http://chrome-json-bug.heroku.com/docs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>