<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Postgres on {code that works}</title>
    <link>https://sadique.io/tags/postgres/</link>
    <description>Recent content in Postgres on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 09 May 2019 17:10:23 -0700</lastBuildDate>
    
	<atom:link href="https://sadique.io/tags/postgres/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Looking up Enum types and values in Postgres</title>
      <link>https://sadique.io/blog/2019/05/09/looking-up-enum-types-and-values-in-postgres/</link>
      <pubDate>Thu, 09 May 2019 17:10:23 -0700</pubDate>
      
      <guid>https://sadique.io/blog/2019/05/09/looking-up-enum-types-and-values-in-postgres/</guid>
      <description>&lt;p&gt;In this blog post, we will explore how Postgres stores Enum types and how to query for Enum types and their values. Postgres&amp;rsquo; Enum, like their counterparts in many programming languags are data types that allow only a predefined set of values to be assigned to them. An interesting difference is that compared to programming languages, Postgres does allow blanks within the values of Enums.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Viewing Sequence ownership information in Postgres</title>
      <link>https://sadique.io/blog/2019/05/07/viewing-sequence-ownership-information-in-postgres/</link>
      <pubDate>Tue, 07 May 2019 18:04:42 -0700</pubDate>
      
      <guid>https://sadique.io/blog/2019/05/07/viewing-sequence-ownership-information-in-postgres/</guid>
      <description>&lt;p&gt;This blog post is an exercise in identifying all the &lt;code&gt;sequences&lt;/code&gt; in a PostgreSQL database that is associated with a table column via an &lt;code&gt;OWNED BY&lt;/code&gt; relationship. Figuring out how to do this was harder than it should have been and this journals my understanding of it.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>