<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>freebuilder on {code that works}</title>
    <link>https://sadique.io/tags/freebuilder/</link>
    <description>Recent content in freebuilder on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 05 May 2018 05:27:35 +0000</lastBuildDate>
    
	<atom:link href="https://sadique.io/tags/freebuilder/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FreeBuilder plugin for IntelliJ</title>
      <link>https://sadique.io/blog/2018/05/05/freebuilder-plugin-for-intellij/</link>
      <pubDate>Sat, 05 May 2018 05:27:35 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2018/05/05/freebuilder-plugin-for-intellij/</guid>
      <description>&lt;p&gt;My work uses &lt;a href=&#34;http://freebuilder.inferred.org/&#34;&gt;FreeBuilder&lt;/a&gt; extensively to generate the &lt;a href=&#34;https://en.wikipedia.org/wiki/Builder_pattern&#34;&gt;Builder&lt;/a&gt; pattern for Java classes. In addition to this, we use the generated Builder classes to deserialize the data calsses using Jackson. After a while it became tiresome to type &lt;code&gt;@FreeBuilder&lt;/code&gt; and &lt;code&gt;class Builder extends ...&lt;/code&gt; everywhere. So I decided to write and IntelliJ IDEA plugin that does it for me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Jackson and FreeBuilder quirk</title>
      <link>https://sadique.io/blog/2018/03/23/a-jackson-and-freebuilder-quirk/</link>
      <pubDate>Fri, 23 Mar 2018 05:21:42 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2018/03/23/a-jackson-and-freebuilder-quirk/</guid>
      <description>&lt;p&gt;Jackson is a great tool to have in your tool set if you deal with JSON or XML. It facilitates easy serialization and de-serialization to and from Java classes with a convenient annotation based interface. With the same set of annotations, we can achieve both XML and JSON serialization and de-serialization. With Jackson&amp;rsquo;s &lt;code&gt;data-format-xml&lt;/code&gt; it is even possible to give the same Class a different JSON and XML representation.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>