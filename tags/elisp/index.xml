<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elisp on {code that works}</title>
    <link>https://sadique.io/tags/elisp/</link>
    <description>Recent content in Elisp on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 29 Apr 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sadique.io/tags/elisp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Emacs hack: Viewing Git logs while composing commit messages</title>
      <link>https://sadique.io/blog/2013/04/29/emacs-hack-viewing-git-logs-while-composing-commit-messages/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/04/29/emacs-hack-viewing-git-logs-while-composing-commit-messages/</guid>
      <description>I use Emacs as my editor to compose Git commit messages. I almost never commit from the terminal with git commit -m. This approach has two advantages: I get a chance to verify what is being committed and get to compose the message using a proper editor complete with spell checking provided by flyspell mode. One thing I wish I had access to while composing commit messages is the git log.</description>
    </item>
    
    <item>
      <title>Fixing Flyspell for Emacs in Mac OS X</title>
      <link>https://sadique.io/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/</guid>
      <description>I use the flyspell-mode as a spell checking mechanism in emacs. Recently, I moved to Mac OS X, and I began to get this error whenever I started emacs:
Error enabling Flyspell mode: (Searching for program No such file or directory aspell) I had installed aspell with Homebrew. The issue seemed to be that Emacs was unable to find the aspell binary. Homebrew installs binaries in /usr/local/bin and it was in my $PATH.</description>
    </item>
    
  </channel>
</rss>