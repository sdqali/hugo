<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on {code that works}</title>
    <link>https://sdqali.in/tags/maven/?utm_source=site&amp;utm_medium=feed</link>
    <description>Recent content in Maven on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Aug 2017 21:00:43 -0700</lastBuildDate>
    <atom:link href="/tags/maven/?utm_source=site&amp;utm_medium=feed" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Uploading a standalone artifact to Nexus 3</title>
      <link>https://sdqali.in/blog/2017/08/17/uploading-a-standalone-artifact-to-nexus-3/?utm_source=site&amp;utm_medium=feed</link>
      <pubDate>Thu, 17 Aug 2017 21:00:43 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2017/08/17/uploading-a-standalone-artifact-to-nexus-3/?utm_source=site&amp;utm_medium=feed</guid>
      <description>&lt;p&gt;This is one of those &amp;ldquo;I had to figure out how to do this today, so the next time I google this, I have a place to look&amp;rdquo; blog posts.
Today, I had to upload a zip file as a build artifact to our Nexus 3 repository. The zip file had been generated by custom shell scripts that did not have a Maven, Ivy or Gradle projects to wrap them.&lt;/p&gt;

&lt;p&gt;The obvious way to do this seemed like using the Nexus 3 REST API, invoked like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;curl -v -u &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
   --upload-file artifact.zip &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
   https://&amp;lt;nexus-server&amp;gt;/repository/maven-releases/com/example/artifact/1.0.0/artifact-1.0.0.zip
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This works and the file is available in the repository. However, this method has the following shortcomings:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There will not be a &lt;code&gt;POM&lt;/code&gt; file generated for this artifact.&lt;/li&gt;
&lt;li&gt;The maven metadata associated with this artifact will not be updated.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using Maven Deploy Plugin&amp;rsquo;s &lt;a href=&#34;http://maven.apache.org/plugins/maven-deploy-plugin/deploy-file-mojo.html&#34;&gt;deploy file mojo&lt;/a&gt; in this situation will help us satisfy the above requirements. The mojo is capable of running in arbitrary directories without the need for a &lt;code&gt;pom.xml&lt;/code&gt; to be present. However, it does expect you to specify authentication parameters in a &lt;code&gt;settings.xml&lt;/code&gt; file. In my situation, I did not want to write credentials in a &lt;code&gt;settings.xml&lt;/code&gt;, so I had to improvise.&lt;/p&gt;

&lt;p&gt;This is what I ended up using and it works like a charm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;mvn deploy:deploy-file &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -DgroupId&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;com.example &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -DartifactId&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;artifact &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -Dversion&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #FF6600&#34;&gt;1&lt;/span&gt;.0.0 &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -Dpackaging&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;zip &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -Dfile&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;artifact.zip &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -DgeneratePom&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #336666&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -DupdateReleaseInfo&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #336666&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #CC3300; font-weight: bold&#34;&gt;\&lt;/span&gt;
    -Durl&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;https://&lt;/span&gt;&lt;span style=&#34;color: #AA0000&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #003333&#34;&gt;NEXUS_USERNAME&lt;/span&gt;&lt;span style=&#34;color: #AA0000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #AA0000&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #003333&#34;&gt;NEXUS_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #AA0000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;@&amp;lt;nexus-server&amp;gt;/repository/maven-releases/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
