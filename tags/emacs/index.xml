<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>emacs on {code that works}</title>
    <link>https://sadique.io/tags/emacs/</link>
    <description>Recent content in emacs on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Aug 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sadique.io/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Navigating Stacktraces in Emacs</title>
      <link>https://sadique.io/blog/2013/08/22/navigating-stacktraces-in-emacs/</link>
      <pubDate>Thu, 22 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/08/22/navigating-stacktraces-in-emacs/</guid>
      <description>&lt;p&gt;I had to debug an issue today and that meant dealing with Rails stack traces. I got tired of having to constantly switch between reading the trace in the terminal and the code in Emacs to figure out what was going wrong and get more context around it. I felt that there should be an easier way of doing this. A quick search &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; did not yield anything. But then I remembered Grep mode &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and it occurred to me that hijacking Grep mode&amp;rsquo;s navigation feature would let me navigate the stack trace better. This is the solution I came up with.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Validating JSON in Emacs</title>
      <link>https://sadique.io/blog/2013/07/31/validating-json-in-emacs/</link>
      <pubDate>Wed, 31 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/07/31/validating-json-in-emacs/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;validate&#34; name=&#34;keywords&#34;&gt;
At work, I have to deal with Amazon CloudFormation &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; templates a fair bit. These templates are JSON files. More and more members of our team are moving away from TextMate to Emacs which makes me really happy. We would like to validate these CloudFormation templates in Emacs. Today we set this up and I hope this turns out to be of help to some one else trying to do the same.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacs hack: Viewing Git logs while composing commit messages</title>
      <link>https://sadique.io/blog/2013/04/29/emacs-hack-viewing-git-logs-while-composing-commit-messages/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/04/29/emacs-hack-viewing-git-logs-while-composing-commit-messages/</guid>
      <description>I use Emacs as my editor to compose Git commit messages. I almost never commit from the terminal with git commit -m. This approach has two advantages: I get a chance to verify what is being committed and get to compose the message using a proper editor complete with spell checking provided by flyspell mode. One thing I wish I had access to while composing commit messages is the git log.</description>
    </item>
    
    <item>
      <title>Configure Git&#39;s comment character</title>
      <link>https://sadique.io/blog/2013/04/14/configure-gits-comment-character/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/04/14/configure-gits-comment-character/</guid>
      <description>TL;DR - Use the core.commentchar configuration to change the character Git uses to mark comment lines in commit messages.
My team has a convention of putting the number of the current Issue/Ticket/Story that we are working on at the beginning of every commit message. This is great because it lets us make sense of the history of our code by helping us answer
 What were the changes made to the code base to build a feature or fix an issue?</description>
    </item>
    
    <item>
      <title>Reducing Emacs startup time while committing</title>
      <link>https://sadique.io/blog/2013/01/22/reducing-emacs-startup-time-while-committing/</link>
      <pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/01/22/reducing-emacs-startup-time-while-committing/</guid>
      <description>I use Emacs as my primary text editor and I use it to edit commit messages for Git. I almost never use the -m option with git commit. Since I have a fairly customised Emacs configuration based around Sam Aaron&amp;rsquo;s Emacs Live, this means that for every commit, there is a visible delay for Emacs to start up for the commit message. I was looking for ways to reduce this and figured out that running Emacs in daemon mode and using emacsclient as the GIT_EDITOR would solve this.</description>
    </item>
    
    <item>
      <title>Fixing Flyspell for Emacs in Mac OS X</title>
      <link>https://sadique.io/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/</guid>
      <description>I use the flyspell-mode as a spell checking mechanism in emacs. Recently, I moved to Mac OS X, and I began to get this error whenever I started emacs:
Error enabling Flyspell mode: (Searching for program No such file or directory aspell) I had installed aspell with Homebrew. The issue seemed to be that Emacs was unable to find the aspell binary. Homebrew installs binaries in /usr/local/bin and it was in my $PATH.</description>
    </item>
    
  </channel>
</rss>