<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>camel on {code that works}</title>
    <link>https://sadique.io/categories/camel/</link>
    <description>Recent content in camel on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 16 Dec 2015 06:07:01 +0000</lastBuildDate>
    
	<atom:link href="https://sadique.io/categories/camel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Authentication for Apache Camel HTTP components</title>
      <link>https://sadique.io/blog/2015/12/16/authentication-for-apache-camel-http-components/</link>
      <pubDate>Wed, 16 Dec 2015 06:07:01 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2015/12/16/authentication-for-apache-camel-http-components/</guid>
      <description>&lt;p&gt;My team at work has been lately working on a data transformer that pushes information from an external system in to platform. For historical reasons the information is passed to us in the form of flat files. We have been working on a data transformer that reads information from the file and posts it into an HTTP end point.
Apache Camel &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; makes a natural choice as the base for implementing such a data transformer. The presence of ready to use components that can read files and post information to HTTP end points and the availability of a nice D.S.L. &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; makes implementation easy and straightforward. One of the things we had to spend time figuring out was how to ensure that we authenticate correctly against our target HTTP end point. This blog post takes a look at various methods we explored.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>