<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{code that works}</title>
    <link>https://sdqali.in/categories/canvas/index.xml?utm_source=site&amp;utm_medium=feed</link>
    <description>Recent content on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="/categories/canvas/index.xml?utm_source=site&amp;utm_medium=feed" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Fitting an Image in to a Canvas object</title>
      <link>https://sdqali.in/blog/2013/10/03/fitting-an-image-in-to-a-canvas-object/?utm_source=site&amp;utm_medium=feed</link>
      <pubDate>Thu, 03 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/10/03/fitting-an-image-in-to-a-canvas-object/?utm_source=site&amp;utm_medium=feed</guid>
      <description>

&lt;p&gt;I have been playing around with Canvas objects and images for a side project I am doing. One of the first things I had to figure out for this project was how to fit an image of arbitrary height and width on to a Canvas object of arbitrary, but known dimensions while preserving the aspect ratios of the image. This blog post is an explanation of the solution I came up with for this.&lt;/p&gt;

&lt;h3 id=&#34;the-problem&#34;&gt;The problem&lt;/h3&gt;

&lt;p&gt;The application has a Canvas object on which it needs to draw arbitrary images. The Canvas&amp;rsquo;s dimensions are set to &lt;strong&gt;450px&lt;/strong&gt; by &lt;strong&gt;300px&lt;/strong&gt;. The image that needs to be drawn will have unknown aspect ratio. The ideal case will be when the image&amp;rsquo;s aspect ratio is &lt;strong&gt;3:2&lt;/strong&gt;, just like the canvas. In this case, there is no need for any adjustments to be made and the image can be drawn like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; canvas &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #336666&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;canvas&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; context &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.getContext(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; imageObj &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;new&lt;/span&gt; Image();
imageObj.onload &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;function&lt;/span&gt;() {
	context.drawImage(imageObj, &lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;, canvas.width, canvas.height);
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But fitting images with aspect ratios different from the Canvas can be a little tricky. The fundamental problem here is that when aspect ratio is different, there is only one pair of edges-either vertical or horizontal-that can be fitted on to the canvas. The image will have to be placed in the center along the other axis. The following diagram illustrates this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sdqali.in/images/canvas_fitting.png&#34; alt=&#34;Canvas fitting&#34; title=&#34;Canvas fitting&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Since fitting depends on the aspect ratio, the code should take it into consideration. The following code compares the ratios and chooses to fit the image horizontally or vertically.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; canvas &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #336666&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;canvas&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; context &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.getContext(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;2d&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; imageObj &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;new&lt;/span&gt; Image();

&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; fitImageOn &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;function&lt;/span&gt;(canvas, imageObj) {
	&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; imageAspectRatio &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; imageObj.width &lt;span style=&#34;color: #555555&#34;&gt;/&lt;/span&gt; imageObj.height;
	&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; canvasAspectRatio &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.width &lt;span style=&#34;color: #555555&#34;&gt;/&lt;/span&gt; canvas.height;
	&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;var&lt;/span&gt; renderableHeight, renderableWidth, xStart, yStart;

	&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;// If image&amp;#39;s aspect ratio is less than canvas&amp;#39;s we fit on height&lt;/span&gt;
	&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;// and place the image centrally along width&lt;/span&gt;
	&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;if&lt;/span&gt;(imageAspectRatio &lt;span style=&#34;color: #555555&#34;&gt;&amp;lt;&lt;/span&gt; canvasAspectRatio) {
		renderableHeight &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.height;
		renderableWidth &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; imageObj.width &lt;span style=&#34;color: #555555&#34;&gt;*&lt;/span&gt; (renderableHeight &lt;span style=&#34;color: #555555&#34;&gt;/&lt;/span&gt; imageObj.height);
		xStart &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; (canvas.width &lt;span style=&#34;color: #555555&#34;&gt;-&lt;/span&gt; renderableWidth) &lt;span style=&#34;color: #555555&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;2&lt;/span&gt;;
		yStart &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;;
	}

	&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;// If image&amp;#39;s aspect ratio is greater than canvas&amp;#39;s we fit on width&lt;/span&gt;
	&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;// and place the image centrally along height&lt;/span&gt;
	&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;if&lt;/span&gt;(imageAspectRatio &lt;span style=&#34;color: #555555&#34;&gt;&amp;gt;&lt;/span&gt; canvasAspectRatio) {
		renderableWidth &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.width
		renderableHeight &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; imageObj.height &lt;span style=&#34;color: #555555&#34;&gt;*&lt;/span&gt; (renderableWidth &lt;span style=&#34;color: #555555&#34;&gt;/&lt;/span&gt; imageObj.width);
		xStart &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;;
		yStart &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; (canvas.height &lt;span style=&#34;color: #555555&#34;&gt;-&lt;/span&gt; renderableHeight) &lt;span style=&#34;color: #555555&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;2&lt;/span&gt;;
	}

	&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;// Happy path - keep aspect ratio&lt;/span&gt;
	&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;else&lt;/span&gt; {
		renderableHeight &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.height;
		renderableWidth &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; canvas.width;
		xStart &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;;
		yStart &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;;
	}
	context.drawImage(imageObj, xStart, yStart, renderableWidth, renderableHeight);
};

imageObj.onload &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;function&lt;/span&gt;() {
	fitImageOn(canvas, imageObj)
};
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A demo of this code in action can be found &lt;a href=&#34;https://sdqali.in/demos/canvas_fitting.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
