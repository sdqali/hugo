<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Java Jmeter Performance Test on Sadique Ali</title>
    <link>http://sdqali.in/categories/code-java-jmeter-performance-test/</link>
    <description>Recent content in Code Java Jmeter Performance Test on Sadique Ali</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Feb 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://sdqali.in/categories/code-java-jmeter-performance-test/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A simple JMeter test with login</title>
      <link>http://sdqali.in/blog/2014/02/17/a-simple-jmeter-test-with-login/</link>
      <pubDate>Mon, 17 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sdqali.in/blog/2014/02/17/a-simple-jmeter-test-with-login/</guid>
      <description>

&lt;p&gt;I had to set up a JMeter test last week - the test included logging in to a site, and then hitting a bunch of URLs, all of them being GET requests. I found it hard to find a simple documentation that described how to do this - the ones I found were either incomplete or were trying to teach me a large number of things at the same time. So when I figured it out, I decided to write this down, for anyone else finding themselves in the same place as me.&lt;/p&gt;

&lt;p&gt;For this example, the application under test is a simple Rails application, with the login form at &lt;code&gt;/login&lt;/code&gt; and a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/login&lt;/code&gt; does the authentication.&lt;/p&gt;

&lt;h3 id=&#34;add-a-thread-group:432050f6a9a1f05bac0d71354129b823&#34;&gt;Add a Thread Group&lt;/h3&gt;

&lt;p&gt;A Thread Group defines a pool of users that will execute a particular test case against the server. JMeter makes the number of users, and the ramp-rate configurable. For the purpose of this example, Number of Threads is 2 and the ramp up time period is 1 second. This thread group is also configured to run forever.
&lt;img src=&#34;http://sdqali.in/images/jmeter/thread_group.png&#34; alt=&#34;Thread Group&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;http-request-defaults:432050f6a9a1f05bac0d71354129b823&#34;&gt;HTTP Request Defaults&lt;/h3&gt;

&lt;p&gt;The net step is to add an HTTP Request Defaults configuration element to the Thread Group. This configuration element sets up the domain or I.P. address of the server, the port and the protocol (HTTP / HTTPS). In this example, Server Name is &lt;code&gt;127.0.0.1&lt;/code&gt; and Port is &lt;code&gt;3000&lt;/code&gt;.
&lt;img src=&#34;http://sdqali.in/images/jmeter/request_defaults.png&#34; alt=&#34;HTTP Request Defaults&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;http-cookie-manager:432050f6a9a1f05bac0d71354129b823&#34;&gt;HTTP Cookie Manager&lt;/h3&gt;

&lt;p&gt;A cookie manager stores and sends cookies, as a web browser would do if an actual user was hitting the server. For the purposes of this example, the default configurations are enough.
&lt;img src=&#34;http://sdqali.in/images/jmeter/cookie_manager.png&#34; alt=&#34;Cookie Manager&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;implement-normal-page-actions:432050f6a9a1f05bac0d71354129b823&#34;&gt;Implement normal page actions&lt;/h3&gt;

&lt;p&gt;From this point, all that remains is to implement HTTP Requests to the end points that are relevant to this test. In this example, we navigate to the Login page at &lt;code&gt;/login&lt;/code&gt;, fire a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/login&lt;/code&gt; with the appropriate form input values and proceed to the Admin page.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>