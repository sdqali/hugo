<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac Osx on {code that works}</title>
    <link>https://sdqali.in/categories/mac-osx/?utm_source=site&amp;utm_medium=feed</link>
    <description>Recent content in Mac Osx on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 22 Jan 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/mac-osx/?utm_source=site&amp;utm_medium=feed" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reducing Emacs startup time while committing</title>
      <link>https://sdqali.in/blog/2013/01/22/reducing-emacs-startup-time-while-committing/?utm_source=site&amp;utm_medium=feed</link>
      <pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/01/22/reducing-emacs-startup-time-while-committing/?utm_source=site&amp;utm_medium=feed</guid>
      <description>

&lt;p&gt;I use Emacs as my primary text editor and I use it to edit
commit messages for Git. I almost never use the &lt;code&gt;-m&lt;/code&gt;
option with &lt;code&gt;git commit&lt;/code&gt;. Since I have a fairly customised Emacs
configuration based around Sam Aaron&amp;rsquo;s
&lt;a href=&#34;https://github.com/overtone/emacs-live&#34;&gt;Emacs Live&lt;/a&gt;, this means that
for every commit, there is a visible delay for Emacs to start up for the
commit message. I was looking for ways to reduce this and figured out that
running Emacs in &lt;code&gt;daemon&lt;/code&gt; mode and using &lt;code&gt;emacsclient&lt;/code&gt; as the
&lt;code&gt;GIT_EDITOR&lt;/code&gt; would solve this.&lt;/p&gt;

&lt;h1 id=&#34;running-an-emacs-daemon-at-start-up-on-mac-os-x&#34;&gt;Running an Emacs daemon at start up on Mac OS X&lt;/h1&gt;

&lt;p&gt;The recommended way of running an application at start up on Mac OS X is
to use &lt;a href=&#34;http://en.wikipedia.org/wiki/Launchd&#34;&gt;launchd&lt;/a&gt;. Launchd
configurations are written as XML files created in
&lt;code&gt;~/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; depending on whether
the app needs to be run for the current user or for all users.
Here is the plist file for Emacs at &lt;code&gt;~/Library/LaunchAgents/gnu.emacs.daemon.plist&lt;/code&gt;, taken from
&lt;a href=&#34;http://www.emacswiki.org/emacs/EmacsAsDaemon&#34;&gt;EmacsWiki&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;&amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;plist&lt;/span&gt; &lt;span style=&#34;color: #330099&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Label&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;gnu.emacs.daemon&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProgramArguments&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;/Applications/Emacs.app/Contents/MacOS/Emacs&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;--daemon&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;RunAtLoad&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ServiceDescription&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Gnu Emacs Daemon&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UserName&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;YOUR USER NAME&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #330099; font-weight: bold&#34;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is loaded by running&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo launchctl load -w ~/Library/LaunchAgents/gnu.emacs.daemon.plist
&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;using-emacs-client-as-the-editor&#34;&gt;Using Emacs client as the editor&lt;/h1&gt;

&lt;p&gt;This is done by adding&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #336666&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #003333&#34;&gt;EDITOR&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/Applications/Emacs.app/Contents/MacOS/bin/emacsclient&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #336666&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #003333&#34;&gt;GIT_EDITOR&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/Applications/Emacs.app/Contents/MacOS/bin/emacsclient&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This setup significantly reduces the Emacs startup time while committing
changes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Managing security certificates from the console - on Windows, Mac OS X and Linux</title>
      <link>https://sdqali.in/blog/2012/06/05/managing-security-certificates-from-the-console---on-windows-mac-os-x-and-linux/?utm_source=site&amp;utm_medium=feed</link>
      <pubDate>Tue, 05 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/06/05/managing-security-certificates-from-the-console---on-windows-mac-os-x-and-linux/?utm_source=site&amp;utm_medium=feed</guid>
      <description>&lt;p&gt;For me the last two weeks or so have involved a lot of wrestling with SSL certificates. One of the things that took some time to figure out was how to piggy-back on the tools provided by different Operating Systems to manage certificates. We did not want to rewrite &lt;a href=&#34;https://www.mozilla.org/projects/security/pki/nss/&#34; title=&#34;NSS&#34;&gt;NSS&lt;/a&gt;. Luckily for us, all the major OSes provide tools to manage certificates from the command line.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Windows provides two ways to deal with certificates from the command line - &lt;a href=&#34;http://technet.microsoft.com/en-us/library/cc732443%28WS.10%29.aspx&#34; title=&#34;Certutil&#34;&gt;Certutil&lt;/a&gt; and &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/e78byta0.aspx&#34; title=&#34;certmgr.exe&#34;&gt;certmgr.exe&lt;/a&gt;. We decided to go with Certutil because it is present out of the box on Windows 7 and Windows Server 2008, while certmgr.exe is part of the .Net runtime. This blog post will deal with Certutil.&lt;/p&gt;

&lt;h3 id=&#34;adding-a-certificate&#34;&gt;Adding a certificate&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;certutil.exe -addstore -user root foo.crt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will install the &lt;code&gt;foo.crt&lt;/code&gt; certificate to the Trusted Root Certification Authorities store for the current user.&lt;/p&gt;

&lt;h3 id=&#34;view-certificates-in-a-store&#34;&gt;View certificates in a store&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;certutil.exe -viewstore -user root
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will list all the certificates in the Trusted Root Certification Authorities store for the current user. One drawback is that it throws up a Window to list as opposed to using STDOUT for output.&lt;/p&gt;

&lt;h3 id=&#34;list-certificates-in-a-store&#34;&gt;List certificates in a store&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;certutil.exe -user -store root
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will list all the certificates in the Trusted Root Certification Authorities store for the current user to STDOUT.&lt;/p&gt;

&lt;p&gt;There are more detailed explanations &lt;a href=&#34;http://technet.microsoft.com/en-us/library/cc772898(WS.10).aspx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;mac-os-x&#34;&gt;Mac OS X&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Mac OS X ships the &lt;a href=&#34;https://developer.apple.com/library/mac/#documentation/Darwin/Reference/Manpages/man1/security.1.html&#34;&gt;security&lt;/a&gt; tool to let the user manage certificates and keychains.&lt;/p&gt;

&lt;h3 id=&#34;adding-a-certificate-1&#34;&gt;Adding a certificate&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;security add-certificate foo.crt
security add-trusted-cert foo.crt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first line will add &lt;code&gt;foo.crt&lt;/code&gt; to the current user&amp;rsquo;s keychain, while the second line ensures that the newly added certificate is trusted. This would mean that the certificate will be trusted for SSL, EAP and Code Signing. To get more fine grained control over what to trust the certificate for, the &lt;code&gt;-p (policy)&lt;/code&gt; flag can be used.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;security add-trusted-cert -p ssl foo.crt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will trust the certificate only for SSL interactions.&lt;/p&gt;

&lt;h3 id=&#34;listing-certificates&#34;&gt;Listing certificates&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;security find-certificates -a -e foo@bar.com
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This would list all the certificates where e-mail address of the issuer &lt;code&gt;foo@bar.com&lt;/code&gt;. Other fields that can be used for matching include &lt;code&gt;-c (name)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;On Linux, the best we could find was &lt;a href=&#34;http://www.mozilla.org/projects/security/pki/nss/tools/certutil.html certutil&#34;&gt;certutil&lt;/a&gt; which is part of Mozilla&amp;rsquo;s NSS project.&lt;/p&gt;

&lt;h3 id=&#34;adding-a-certificate-2&#34;&gt;Adding a certificate&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;certutil -A -d sql:~/.pki/nssdb -t C -n &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;Certificate Common Name&amp;quot;&lt;/span&gt; -i foo.crt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will add &lt;code&gt;foo.crt&lt;/code&gt; to the certificate database &lt;code&gt;~/.pki/nssdb&lt;/code&gt;. This is where applications like Chromium look for certificates.&lt;/p&gt;

&lt;h3 id=&#34;listing-certificates-1&#34;&gt;Listing certificates&lt;/h3&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;certutil -L -d sql:~/.pki/nssdb -n &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;Certificate Common Name&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will list the certificates in the &lt;code&gt;~/.pki/nssdb&lt;/code&gt; with the common name &amp;ldquo;Certificate Common Name&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;firefox&#34;&gt;Firefox&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;While the above steps work fine for pretty much all applications on the three OSes, Firefox does things in it&amp;rsquo;s own way. Firefox implements &lt;a href=&#34;https://www.mozilla.org/projects/security/pki/nss/ NSS&#34;&gt;NSS&lt;/a&gt; and hence does not look at the certificates the OS knows about. One solution to manage certificates from the command line will be to install certutil and point it at the &lt;code&gt;cert.db&lt;/code&gt; certificate database in your Firefox profile directory. Alternatively, one could do the following&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Launch Firefox with a blank profile&lt;/li&gt;
&lt;li&gt;Accept the certificates we are interested in.&lt;/li&gt;
&lt;li&gt;Save a copy of the &lt;code&gt;cert8.db&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Import this database to the profiles we wish to run Firefox on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While copying the database is not as clean a solution as using certutil, we decided to go with the second option because there is no guarantee that certutil will be present on the user&amp;rsquo;s box, especially if they are running Windows or Mac OS X. And we had a fairly high control over the Firefox profiles.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fixing Flyspell for Emacs in Mac OS X</title>
      <link>https://sdqali.in/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/?utm_source=site&amp;utm_medium=feed</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/?utm_source=site&amp;utm_medium=feed</guid>
      <description>

&lt;p&gt;I use the &lt;a href=&#34;http://www.emacswiki.org/emacs/FlySpell&#34;&gt;flyspell-mode&lt;/a&gt; as a spell checking mechanism in emacs. Recently, I moved to Mac OS X, and I began to get this error whenever I started emacs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Error enabling Flyspell mode:
&lt;span style=&#34;color: #555555&#34;&gt;(&lt;/span&gt;Searching &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;for&lt;/span&gt; program No such file or directory aspell&lt;span style=&#34;color: #555555&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I had installed aspell with Homebrew. The issue seemed to be that Emacs was unable to find the aspell binary. Homebrew installs binaries in &lt;strong&gt;/usr/local/bin&lt;/strong&gt; and it was in my $PATH. It turns out Emacs uses it&amp;rsquo;s own exec path to look for binaries to execute in sub-processes. So the fix is to add the &lt;strong&gt;/usr/local/bin&lt;/strong&gt; path to the exec-path. This is the change needed to the &lt;strong&gt;~/.emacs&lt;/strong&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color: #003333&#34;&gt;exec-path&lt;/span&gt; (&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;quote&lt;/span&gt; (&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/usr/bin&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/bin&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/usr/sbin&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/sbin&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/usr/local/bin&amp;quot;&lt;/span&gt;))))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice the &lt;strong&gt;/usr/local/bin&lt;/strong&gt; in there.&lt;/p&gt;

&lt;h2 id=&#34;update&#34;&gt;Update&lt;/h2&gt;

&lt;p&gt;This does not seem to work. A better way to do this is to add the
following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;(&lt;span style=&#34;color: #003333&#34;&gt;setenv&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt; (&lt;span style=&#34;color: #003333&#34;&gt;concat&lt;/span&gt; (&lt;span style=&#34;color: #003333&#34;&gt;getenv&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;) &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;:/usr/local/bin&amp;quot;&lt;/span&gt;))
(&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;setq&lt;/span&gt; &lt;span style=&#34;color: #003333&#34;&gt;exec-path&lt;/span&gt; (&lt;span style=&#34;color: #336666&#34;&gt;append&lt;/span&gt; &lt;span style=&#34;color: #003333&#34;&gt;exec-path&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;/usr/local/bin&amp;quot;&lt;/span&gt;)))
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
