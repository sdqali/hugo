<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on {code that works}</title>
    <link>https://sdqali.in/categories/development/</link>
    <description>Recent content in Development on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 29 Nov 2016 22:50:42 -0700</lastBuildDate>
    
	<atom:link href="https://sdqali.in/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing feature toggles for a Spring Boot application - Part 4</title>
      <link>https://sdqali.in/blog/2016/11/29/implementing-feature-toggles-for-a-spring-boot-application---part-4/</link>
      <pubDate>Tue, 29 Nov 2016 22:50:42 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/11/29/implementing-feature-toggles-for-a-spring-boot-application---part-4/</guid>
      <description>&lt;p&gt;In the fourth part of this &lt;a href=&#34;https://sdqali.in/series/feature-toggles/&#34;&gt;series&lt;/a&gt; about implementing &lt;a href=&#34;https://sdqali.in/blog/2016/11/21/implementing-feature-toggles-for-a-spring-boot-application---part-1/&#34;&gt;feature toggles&lt;/a&gt; for a Spring Boot application, we will take a look at how our implementation so far introduced a dependency on the application being restarted for changes to take place.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing feature toggles for a Spring Boot application - Part 3</title>
      <link>https://sdqali.in/blog/2016/11/28/implementing-feature-toggles-for-a-spring-boot-application---part-3/</link>
      <pubDate>Mon, 28 Nov 2016 22:50:39 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/11/28/implementing-feature-toggles-for-a-spring-boot-application---part-3/</guid>
      <description>&lt;p&gt;In the third part of this &lt;a href=&#34;https://sdqali.in/series/feature-toggles/&#34;&gt;series&lt;/a&gt; about implementing feature toggles for a Spring Boot application, we will take a look at exposing the state of feature flags as a Spring Boot management end point for monitoring and testing purposes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing feature toggles for a Spring Boot application - Part 2</title>
      <link>https://sdqali.in/blog/2016/11/26/implementing-feature-toggles-for-a-spring-boot-application---part-2/</link>
      <pubDate>Sat, 26 Nov 2016 22:48:48 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/11/26/implementing-feature-toggles-for-a-spring-boot-application---part-2/</guid>
      <description>&lt;p&gt;In the second part of this [series](&amp;ldquo;/series/feature-toggles/&amp;rdquo;) about implementing feature toggles for a Spring Boot application, we will look at exposing the features to the Angular front-end so that features can be toggled in UI components.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing feature toggles for a Spring Boot application - Part 1</title>
      <link>https://sdqali.in/blog/2016/11/21/implementing-feature-toggles-for-a-spring-boot-application---part-1/</link>
      <pubDate>Mon, 21 Nov 2016 17:03:03 -0800</pubDate>
      
      <guid>https://sdqali.in/blog/2016/11/21/implementing-feature-toggles-for-a-spring-boot-application---part-1/</guid>
      <description>&lt;p&gt;In one of our recent projects at work, we implemented feature toggles for a Spring MVC / Angular JS code base and this &lt;a href=&#34;https://sdqali.in/series/feature-toggles&#34;&gt;series of blog posts&lt;/a&gt; discusses our motivations and requirements, the approach we took and what we learned from it.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setting up a secure etcd cluster behind a proxy</title>
      <link>https://sdqali.in/blog/2016/11/11/setting-up-a-secure-etcd-cluster-behind-a-proxy/</link>
      <pubDate>Fri, 11 Nov 2016 13:07:32 -0800</pubDate>
      
      <guid>https://sdqali.in/blog/2016/11/11/setting-up-a-secure-etcd-cluster-behind-a-proxy/</guid>
      <description>&lt;p&gt;This is a blog post that explains how to set up a highly available etcd cluster behind a proxy and securing the communication between a client and the proxy, between the proxy and the individual member in the cluster and between members in the cluster.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Handling Deserialization errors in Spring Redis Sessions</title>
      <link>https://sdqali.in/blog/2016/11/02/handling-deserialization-errors-in-spring-redis-sessions/</link>
      <pubDate>Wed, 02 Nov 2016 13:10:33 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/11/02/handling-deserialization-errors-in-spring-redis-sessions/</guid>
      <description>&lt;p&gt;One of the challenges of using storing spring sessions in Redis is that the objects that gets stored as part of a session often undergoes changes as the application evolves and these changes cause de-serialization exceptions to be thrown after a deployment when a session created before the deployment is presented to the application. This blog post discusses a method to work around this issue.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSRF Protection with Spring Security and Angular JS</title>
      <link>https://sdqali.in/blog/2016/07/20/csrf-protection-with-spring-security-and-angular-js/</link>
      <pubDate>Wed, 20 Jul 2016 21:57:01 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/20/csrf-protection-with-spring-security-and-angular-js/</guid>
      <description>&lt;p&gt;Both Spring Security and Angular JS provide support for CSRF protection. However, getting these to work together to provide protection from CSRF requires some non-obvious configuration. This blog post explains how to add CSRF protection to an application that uses Spring Security with an Angular JS front end.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Controlling Redis auto-configuration for Spring Boot Session</title>
      <link>https://sdqali.in/blog/2016/07/16/controlling-redis-auto-configuration-for-spring-boot-session/</link>
      <pubDate>Sat, 16 Jul 2016 15:42:05 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/16/controlling-redis-auto-configuration-for-spring-boot-session/</guid>
      <description>&lt;p&gt;If you have been using Spring Boot, chances are that you are using the Spring Session library to handle sessions. Spring Session has the ability to persist the sessions to various data stores, including Redis. The default behaviors of Spring Boot when combined with Spring Session is to start using Redis as the session store the moment &lt;code&gt;spring-session-data-redis&lt;/code&gt; is detected in the class path, thereby making it hard to conditionally turn Redis support ON and OFF. This blog post explores why this is the default behavior and presents a solution to control this behavior.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT authentication with Spring Web - Part 5</title>
      <link>https://sdqali.in/blog/2016/07/13/jwt-authentication-with-spring-web---part-5/</link>
      <pubDate>Wed, 13 Jul 2016 23:05:53 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/13/jwt-authentication-with-spring-web---part-5/</guid>
      <description>&lt;p&gt;In parts 1 through 4 of this series, we built a Spring API that can issue a JWT when a user successfully authenticates and verify the JWT presented by the client for subsequent requests. In this blog post - the last in the series, we will build a simple Angular JS application with authentication that uses this API as the backend.

These are the blog posts in this series:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT authentication with Spring Web - Part 4</title>
      <link>https://sdqali.in/blog/2016/07/07/jwt-authentication-with-spring-web---part-4/</link>
      <pubDate>Thu, 07 Jul 2016 23:47:53 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/07/jwt-authentication-with-spring-web---part-4/</guid>
      <description>&lt;p&gt;In parts 1 through 3 of this series, we built a Spring API that can issue a JWT when a user successfully authenticates. In this blog post, we will add the capability to verify the JWT presented by the client for subsequent requests.

These are the blog posts in this series:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT authentication with Spring Web - Part 3</title>
      <link>https://sdqali.in/blog/2016/07/05/jwt-authentication-with-spring-web---part-3/</link>
      <pubDate>Tue, 05 Jul 2016 22:30:53 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/05/jwt-authentication-with-spring-web---part-3/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://sdqali.in/blog/2016/07/03/jwt-authentication-with-spring-web---part-2/&#34;&gt;previous blog post&lt;/a&gt;, we built the Spring API that responds with Profile information. Continuing on the path to building authentication with JWT, in this blog post, we will create a login mechanism that issues a JWT when the user presents the correct credentials.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT authentication with Spring Web - Part 2</title>
      <link>https://sdqali.in/blog/2016/07/03/jwt-authentication-with-spring-web---part-2/</link>
      <pubDate>Sun, 03 Jul 2016 09:22:53 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/03/jwt-authentication-with-spring-web---part-2/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://sdqali.in/blog/2016/07/02/jwt-authentication-with-spring-web---part-1/&#34;&gt;previous blog post&lt;/a&gt; in this series, we looked at the basics of JWT. We will move on to building the Spring API that we will use JWT for authentication in this blog post.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT authentication with Spring Web - Part 1</title>
      <link>https://sdqali.in/blog/2016/07/02/jwt-authentication-with-spring-web---part-1/</link>
      <pubDate>Sat, 02 Jul 2016 18:42:04 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2016/07/02/jwt-authentication-with-spring-web---part-1/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;jwt authentication example&#34; name=&#34;keywords&#34;&gt;
JSON Web Tokens (JWTs) are signed tokens issued by a server that it can use to verify a claim made by a client. This blog post is the first in a series where I implement authentication based on JWT in a Spring Web application with an Angular JS front end.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JSON logging for Spring applications</title>
      <link>https://sdqali.in/blog/2016/06/30/json-logging-for-spring-applications/</link>
      <pubDate>Thu, 30 Jun 2016 19:43:07 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2016/06/30/json-logging-for-spring-applications/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;logstash spring boot example&#34; name=&#34;keywords&#34;&gt;
If you have an application that writes logs, there are many reasons to make it write the log in JSON format. It makes it easier to search and analyze them when using tools such as the ELK Stack &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. JSON formatted logs make it easier to look at them when looking at how the app is behaving in real time using tools like jq &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. This blog post documents how to format logs as JSON in a Spring application.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Injecting dependencies into a Spring @Configuration</title>
      <link>https://sdqali.in/blog/2016/06/28/injecting-dependencies-into-a-spring-configuration/</link>
      <pubDate>Tue, 28 Jun 2016 23:17:51 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2016/06/28/injecting-dependencies-into-a-spring-configuration/</guid>
      <description>&lt;p&gt;This is one of those blog posts about things I wish I had known before I spent a lot of time figuring out when something was not working as expected. Recently, we have been trying to extend a &lt;code&gt;WebMvcConfigurerAdapter&lt;/code&gt; to wire up an HTTP request interceptor. And things did not work as we expected it to and we learned that our understanding of how Spring behaved under this situation was wrong. This is a write up to refer back to if and when we encounter this issue again.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Filtering responses in Spring MVC</title>
      <link>https://sdqali.in/blog/2016/06/08/filtering-responses-in-spring-mvc/</link>
      <pubDate>Wed, 08 Jun 2016 13:23:16 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2016/06/08/filtering-responses-in-spring-mvc/</guid>
      <description>&lt;p&gt;Yesterday my colleague &lt;a href=&#34;https://twitter.com/imdhmd&#34;&gt;Imdad&lt;/a&gt; asked if there was a mechanism to add filtering to a Spring MVC end point that responded with JSON. We both started looking at it and this blog post explores a way to do it, albeit for a specific type of responses that was relevant to our discussions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deprecating domain events in Axon</title>
      <link>https://sdqali.in/blog/2016/04/24/deprecating-domain-events-in-axon/</link>
      <pubDate>Sun, 24 Apr 2016 18:35:43 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2016/04/24/deprecating-domain-events-in-axon/</guid>
      <description>&lt;p&gt;Recently at work, we had to deprecate a domain event. This event used to represent an error scenario. However, the business had since decided that this is no longer a valid error scenario. Removing the Java class is not straight forward - since there are events of this type stored in the event store, every time the aggregate associated with this event is loaded, Axon will throw errors trying to de-serialize them.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Programmable exit codes for spring command line applications - 2</title>
      <link>https://sdqali.in/blog/2016/04/19/programmable-exit-codes-for-spring-command-line-applications---2/</link>
      <pubDate>Tue, 19 Apr 2016 22:29:12 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2016/04/19/programmable-exit-codes-for-spring-command-line-applications---2/</guid>
      <description>&lt;p&gt;In the last &lt;a href=&#34;https://sdqali.in/blog/2016/04/17/programmable-exit-codes-for-spring-command-line-applications/&#34;&gt;blog post&lt;/a&gt;, we took a look at how to implement programmable exit codes for spring command line applications by using exceptions that implement &lt;code&gt;ExitCodeGenerator&lt;/code&gt;. This time, we will take a look at how to achieve the same without having to depend on an exception.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Programmable exit codes for Spring command line applications</title>
      <link>https://sdqali.in/blog/2016/04/17/programmable-exit-codes-for-spring-command-line-applications/</link>
      <pubDate>Sun, 17 Apr 2016 23:36:48 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2016/04/17/programmable-exit-codes-for-spring-command-line-applications/</guid>
      <description>&lt;p&gt;Spring&amp;rsquo;s &lt;code&gt;CommandLineRunner&lt;/code&gt; provides a great mechanism to build command line applications. While this convenience is great, applications that use &lt;code&gt;CommandLineRunner&lt;/code&gt; require extra effort in some areas like integration testing. Exit codes are such an area - applications that use command line runners always report their exit code as &lt;code&gt;0&lt;/code&gt; even if there are exceptions thrown. This blog post explains a way to get to programmable exit codes for such applications.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using custom arguments in Spring MVC controllers</title>
      <link>https://sdqali.in/blog/2016/01/29/using-custom-arguments-in-spring-mvc-controllers/</link>
      <pubDate>Fri, 29 Jan 2016 17:41:49 -0800</pubDate>
      
      <guid>https://sdqali.in/blog/2016/01/29/using-custom-arguments-in-spring-mvc-controllers/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;spring, arguments, handlermethodargumentresolver, spring mvc, spring boot&#34; name=&#34;keywords&#34;&gt;
Most of the Spring controllers in the real world accept a lot of different types of parameters - Path variables, URL parameters, request headers, request body and sometimes even the entire HTTP Request object. This provides a flexible mechanism to create APIs. Spring is really good at parsing these parameters in to Java types as long as there is an ObjectMapper (like Jackson) configured to take care of the de-serialization.&lt;/p&gt;

&lt;p&gt;However, there are situations where you want methods to receive a parameter of a particular type that has to resolved from a set of parameters–for example, an API can expect consumers to send meta data about a request in the form of headers and need a custom type to hold this information. Spring provides a convenient way to provide such custom arguments. This blog post explores this feature and how to implement it and test it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Authentication for Apache Camel HTTP components</title>
      <link>https://sdqali.in/blog/2015/12/16/authentication-for-apache-camel-http-components/</link>
      <pubDate>Wed, 16 Dec 2015 01:07:01 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/16/authentication-for-apache-camel-http-components/</guid>
      <description>&lt;p&gt;My team at work has been lately working on a data transformer that pushes information from an external system in to platform. For historical reasons the information is passed to us in the form of flat files. We have been working on a data transformer that reads information from the file and posts it into an HTTP end point.
Apache Camel &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; makes a natural choice as the base for implementing such a data transformer. The presence of ready to use components that can read files and post information to HTTP end points and the availability of a nice D.S.L. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; makes implementation easy and straightforward. One of the things we had to spend time figuring out was how to ensure that we authenticate correctly against our target HTTP end point. This blog post takes a look at various methods we explored.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thoughts on Open Graph tags</title>
      <link>https://sdqali.in/blog/2015/12/14/thoughts-on-open-graph-tags/</link>
      <pubDate>Mon, 14 Dec 2015 21:47:06 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/14/thoughts-on-open-graph-tags/</guid>
      <description>&lt;p&gt;The Open Graph protocol was designed by Facebook to help content creators generate a richer preview of links to their content when they get posted in to Facebook. It was originally proposed as a simple mark up that can be adopted in platforms beyond Facebook. The Open Graph Protocol Design Decisions presentation &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; does a very good job of enumerating the motivation and design decisions made for Open Graph. I have lately been reading and experimenting with these tags and I notice a fair bit of differences when it comes to how these tags are used by different platforms.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integration testing Spring command line applications</title>
      <link>https://sdqali.in/blog/2015/12/11/integration-testing-spring-command-line-applications/</link>
      <pubDate>Fri, 11 Dec 2015 15:57:30 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/11/integration-testing-spring-command-line-applications/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://sdqali.in/blog/2015/12/10/integration-testing-challenges-for-non-web-spring-applications/&#34;&gt;last blog post&lt;/a&gt;, I wrote about the challenges of writing an integration test for a Spring command line application. One of the solutions for this issue discussed in the blog post was to use the &lt;code&gt;@IntegrationTest&lt;/code&gt; annotations to inject Java system properties and use that to run the application instead of the normal command line arguments. This blog post describes how to perform this.

The first step is to rewrite our test to use the &lt;code&gt;@IntegrationTest&lt;/code&gt; annotations. This will result in a test that looks as follows:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integration testing challenges for non-web Spring applications</title>
      <link>https://sdqali.in/blog/2015/12/10/integration-testing-challenges-for-non-web-spring-applications/</link>
      <pubDate>Thu, 10 Dec 2015 21:45:59 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/10/integration-testing-challenges-for-non-web-spring-applications/</guid>
      <description>&lt;p&gt;We are building a command line data loader application at work that uses Spring. One of the things that I took us more time that it should have to figure out was how to write an integration test that invokes the command line application with the right command line arguments. This blog post describes this scenario and a potential solution to this problem.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How thinking of Documentation as Legislation helped me become a better programmer</title>
      <link>https://sdqali.in/blog/2015/12/07/how-thinking-of-documentation-as-legislation-helped-me-become-a-better-programmer/</link>
      <pubDate>Mon, 07 Dec 2015 20:43:02 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/07/how-thinking-of-documentation-as-legislation-helped-me-become-a-better-programmer/</guid>
      <description>When I first started programming, it was predominantly creating applications that utilized the C++ graphics library. I was 14 and my friends and I tried to make the most of the time we got to spend at the computer lab of the boarding school we attended. We created applications that drew pretty, often animated pictures on the screen and not much else. This taught us basics, but our learning lacked any kind of structure.</description>
    </item>
    
    <item>
      <title>Implementing custom annotations for Spring MVC</title>
      <link>https://sdqali.in/blog/2015/12/06/implementing-custom-annotations-for-spring-mvc/</link>
      <pubDate>Sun, 06 Dec 2015 13:28:26 -0800</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/06/implementing-custom-annotations-for-spring-mvc/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;spring, annotation, custom annotation, spring mvc, spring boot&#34; name=&#34;keywords&#34;&gt;
I often have to work with Spring MVC based code bases that have been living for a while. One of the common trait of these code bases I have observed is the repeated use of the same Spring annotations to achieve the same effect again and again. A really good example of this is annotating a controller method with a combination of &lt;code&gt;@RequestMapping&lt;/code&gt; and &lt;code&gt;@ResponseStatus&lt;/code&gt; to set the expected request and response &lt;code&gt;Content-Type&lt;/code&gt;, the request Method, response status etc. This blog post describes how to create custom Spring annotationshow to create custom annotation in spring mvc that produce the same effect as multiple Spring annotations acting together.

Among the new things introduced in Spring 4 was the idea of meta-annotations. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Meta annotations are annotations that can act up on other annotations by modifying and overriding attributes of the target annotations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Validating RequestParams and PathVariables in Spring MVC</title>
      <link>https://sdqali.in/blog/2015/12/04/validating-requestparams-and-pathvariables-in-spring-mvc/</link>
      <pubDate>Fri, 04 Dec 2015 22:50:24 -0800</pubDate>
      
      <guid>https://sdqali.in/blog/2015/12/04/validating-requestparams-and-pathvariables-in-spring-mvc/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;spring, validate, request, parameters, @requestparam, spring mvc, param, validation&#34; name=&#34;keywords&#34;&gt;
Spring MVC provides a convenient way to validate inputs to API end points through the use of &lt;code&gt;JSR-303&lt;/code&gt; annotations. While this mechanism works great for end points that consume a &lt;code&gt;RequestBody&lt;/code&gt; (as is the case with most &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; requests), it is not easy to achieve the same effect for end points that consume primitives in the form of path variables or request parameters (as is the case with most &lt;code&gt;GET&lt;/code&gt; requests).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Testing async responses using MockMvc</title>
      <link>https://sdqali.in/blog/2015/11/24/testing-async-responses-using-mockmvc/</link>
      <pubDate>Tue, 24 Nov 2015 05:45:06 -0500</pubDate>
      
      <guid>https://sdqali.in/blog/2015/11/24/testing-async-responses-using-mockmvc/</guid>
      <description>&lt;p&gt;There are times when a Spring MVC end point performs asynchronous operations. Testing these end points using MockMvc can be tricky because of the asynchronous nature in which the result of the operation is eventually returned. This blog post describes how to write tests in such scenarios.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Running multiple applications in the same Tomcat installation</title>
      <link>https://sdqali.in/blog/2015/06/09/running-multiple-applications-in-the-same-tomcat-installation/</link>
      <pubDate>Tue, 09 Jun 2015 01:11:05 -0400</pubDate>
      
      <guid>https://sdqali.in/blog/2015/06/09/running-multiple-applications-in-the-same-tomcat-installation/</guid>
      <description>&lt;p&gt;This blog post describes how to set up Tomcat to run multiple applications running as separate JVM processes, using the same Tomcat installation. This method utilizes the &lt;code&gt;CATALINA_HOME&lt;/code&gt; and &lt;code&gt;CATALINA_BASE&lt;/code&gt; environment variables used by Tomcat. I have verified this method against Tomcat versions &lt;code&gt;8.0.x&lt;/code&gt;; other versions should work the same way.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Making sense of Cloud Foundry security group declarations</title>
      <link>https://sdqali.in/blog/2015/05/21/making-sense-of-cloud-foundry-security-group-declarations/</link>
      <pubDate>Thu, 21 May 2015 22:58:41 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2015/05/21/making-sense-of-cloud-foundry-security-group-declarations/</guid>
      <description>&lt;p&gt;Cloud Foundry allows fine grained declaration of security groups, down to IP address ranges and Ports. While this provides great flexibility, making sense of why each rule in a security group exists and what each does is really difficult because of the limitations of the security group declaration mechanism.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring Cloud Foundry Java Memory Parameters</title>
      <link>https://sdqali.in/blog/2015/05/20/configuring-cloud-foundry-java-memory-parameters/</link>
      <pubDate>Wed, 20 May 2015 19:42:56 -0700</pubDate>
      
      <guid>https://sdqali.in/blog/2015/05/20/configuring-cloud-foundry-java-memory-parameters/</guid>
      <description>&lt;p&gt;This week I have been trying out Cloud Foundry. Today while trying to set up monitoring through AppDynamics, the sample application that I was using started crashing because of a Java memory error. This blog post discusses how to prevent this from happening by configuring Java memory parameters used by the application.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Clojure Dojo - Levenshtein edit distance</title>
      <link>https://sdqali.in/blog/2014/03/20/clojure-dojo---levenshtein-edit-distance/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2014/03/20/clojure-dojo---levenshtein-edit-distance/</guid>
      <description>I have been playing around with Clojure and after familiarising myself with the core, I decided to start writing little programs that forces me to choose the right idioms. I am starting off with Levenshtein edit distance of two strings.
Levenshtein edit distance Levenshtein edit distance between two string is a way of quantifying how similar or dissimilar they are, lower distance implying higher similarity. The algorithm to calculate Levenshtein distance is fairly simple - the algorithm cares about three operations that can be performed at a particular position in a string to move it towards the other - insertion, deletion and substitution.</description>
    </item>
    
    <item>
      <title>A simple JMeter test with login</title>
      <link>https://sdqali.in/blog/2014/02/17/a-simple-jmeter-test-with-login/</link>
      <pubDate>Mon, 17 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2014/02/17/a-simple-jmeter-test-with-login/</guid>
      <description>I had to set up a JMeter test last week - the test included logging in to a site, and then hitting a bunch of URLs, all of them being GET requests. I found it hard to find a simple documentation that described how to do this - the ones I found were either incomplete or were trying to teach me a large number of things at the same time.</description>
    </item>
    
    <item>
      <title>Implementing Rate Limiting in Rails - Part 2</title>
      <link>https://sdqali.in/blog/2013/10/13/implementing-rate-limiting-in-rails---part-2/</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/10/13/implementing-rate-limiting-in-rails---part-2/</guid>
      <description>The first part of this series can be found here.
The first part of this series looked at how to implement basic rate limiting in a Rails application. However, as pointed out in the improvements section, the implementation was not complete - it did not provide clients enough information about the rate limiting that is in place and how long they should wait before making further requests once they hit the limit.</description>
    </item>
    
    <item>
      <title>Implementing Rate Limiting in Rails - Part 1</title>
      <link>https://sdqali.in/blog/2013/10/12/implementing-rate-limiting-in-rails---part-1/</link>
      <pubDate>Sat, 12 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/10/12/implementing-rate-limiting-in-rails---part-1/</guid>
      <description>The second part of this series can be found here.
Rate limiting or throttling is the practice of limiting how frequently legitimate users of a web service can access the service. Rate limiting is often put in place to prevent the hogging of resources by a sub set of the users of the system. Rate limiting works by responding with error messages when a client exceeds their allocated share of requests within a predefined time window.</description>
    </item>
    
    <item>
      <title>Python Hack - Dynamically override an object&#39;s attribute</title>
      <link>https://sdqali.in/blog/2013/10/07/python-hack---dynamically-override-an-objects-attribute/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/10/07/python-hack---dynamically-override-an-objects-attribute/</guid>
      <description>While working with Locust 1 recently, we ran into a situation where we had to dynamically override an attribute in a class in the Locust library so as to control what value it got assigned. After a lot of scratching our heads and reading the Python documentation, we came across the property function. We were able to use this to hack together a solution that ensures that every time an attribute is read, it returns the result of executing a method.</description>
    </item>
    
    <item>
      <title>Managing Gemsets in Rbenv</title>
      <link>https://sdqali.in/blog/2013/09/12/managing-gemsets-in-rbenv/</link>
      <pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/09/12/managing-gemsets-in-rbenv/</guid>
      <description>&lt;p&gt;When I was setting up my new laptop today, I decided to use Rbenv &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; to manage my Ruby versions. I have typically used RVM &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and had never used Rbenv. Rbenv is a Ruby version manager written by &lt;a href=&#34;https://github.com/sstephenson/&#34;&gt;Sam Stephenson&lt;/a&gt; and deliberately tries to do less and do it well. Instead of overriding Bash commands like RVM does, Rbenv chooses to use wrappers or &lt;strong&gt;shims&lt;/strong&gt; around Ruby binaries to choose the Ruby executable to run.&lt;/p&gt;

&lt;p&gt;This works well, until you have to manage Gemsets &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. Often, one is working on two projects that use the same version of Ruby, but has entirely different chain of dependency on Gems. RVM&amp;rsquo;s gemsets work really well for this use case. I was looking around to see how one would manage gemsets with Rbenv. There are three ways to do it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Looking up Compiler params used to compile a Ruby version</title>
      <link>https://sdqali.in/blog/2013/09/08/looking-up-compiler-params-used-to-compile-a-ruby-version/</link>
      <pubDate>Sun, 08 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/09/08/looking-up-compiler-params-used-to-compile-a-ruby-version/</guid>
      <description>Today Kashyap asked how one can identify the compiler parameters passed when compiling a Ruby version. I was curious how to achieve this and like any confused developer started searching for and looking in the Ruby documentation. Searching for compiler parameters in ruby did not yield any interesting results and the group of constants with the RUBY_ prefix 1 loaded in Ruby did not include anything related to compiler flags. Then I came across this blog post 2 by Jan Lelis and I was curious what else RbConfig::CONFIG contains.</description>
    </item>
    
    <item>
      <title>Python&#39;s bool type</title>
      <link>https://sdqali.in/blog/2013/08/15/pythons-bool-type/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/08/15/pythons-bool-type/</guid>
      <description>Python does not have a true boolean type. The True and False built-in values in Python are wrappers around the integers 1 and 0. This results in some interesting results involving True and False.
&amp;gt;&amp;gt;&amp;gt; True == 1 True &amp;gt;&amp;gt;&amp;gt; False == 0 True &amp;gt;&amp;gt;&amp;gt; True + 9 10 &amp;gt;&amp;gt;&amp;gt; False - 1 -1 &amp;gt;&amp;gt;&amp;gt; str(True) &amp;#39;True&amp;#39; &amp;gt;&amp;gt;&amp;gt; repr(True) &amp;#39;True&amp;#39; The Python bool implementation got formalised in PEP 285 1 in 2002 by Guido van Rossum.</description>
    </item>
    
    <item>
      <title>Validating JSON in Emacs</title>
      <link>https://sdqali.in/blog/2013/07/31/validating-json-in-emacs/</link>
      <pubDate>Wed, 31 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/07/31/validating-json-in-emacs/</guid>
      <description>&lt;p&gt;&lt;meta content=&#34;validate&#34; name=&#34;keywords&#34;&gt;
At work, I have to deal with Amazon CloudFormation &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; templates a fair bit. These templates are JSON files. More and more members of our team are moving away from TextMate to Emacs which makes me really happy. We would like to validate these CloudFormation templates in Emacs. Today we set this up and I hope this turns out to be of help to some one else trying to do the same.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacs hack: Viewing Git logs while composing commit messages</title>
      <link>https://sdqali.in/blog/2013/04/29/emacs-hack-viewing-git-logs-while-composing-commit-messages/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/04/29/emacs-hack-viewing-git-logs-while-composing-commit-messages/</guid>
      <description>I use Emacs as my editor to compose Git commit messages. I almost never commit from the terminal with git commit -m. This approach has two advantages: I get a chance to verify what is being committed and get to compose the message using a proper editor complete with spell checking provided by flyspell mode. One thing I wish I had access to while composing commit messages is the git log.</description>
    </item>
    
    <item>
      <title>Configure Git&#39;s comment character</title>
      <link>https://sdqali.in/blog/2013/04/14/configure-gits-comment-character/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/04/14/configure-gits-comment-character/</guid>
      <description>TL;DR - Use the core.commentchar configuration to change the character Git uses to mark comment lines in commit messages.
My team has a convention of putting the number of the current Issue/Ticket/Story that we are working on at the beginning of every commit message. This is great because it lets us make sense of the history of our code by helping us answer
 What were the changes made to the code base to build a feature or fix an issue?</description>
    </item>
    
    <item>
      <title>My experience working remotely</title>
      <link>https://sdqali.in/blog/2013/04/11/my-experience-working-remotely/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/04/11/my-experience-working-remotely/</guid>
      <description>There has been a lot of debate in the tech community about working remotely and the willingness of employers to allow this option to their employees. At the very beginning of my career as a programmer, I had the opportunity to work on a distributed team. While the team was distributed, I was still working from an office and for almost half of the duration of my work on the team I had team members sitting beside me in the same office.</description>
    </item>
    
    <item>
      <title>Oh I can build it in...</title>
      <link>https://sdqali.in/blog/2013/04/08/oh-i-can-build-it-in.../</link>
      <pubDate>Mon, 08 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/04/08/oh-i-can-build-it-in.../</guid>
      <description>Oh, is this what you guys have been building for three years? I can build it in a month!
 Substitute the two time durations with something appropriate and you end up with how some software developers react after encountering a new project or application. I have seen this happen in multiple situations, where I had more context of how the application in question had evolved which the person making the comment did not have.</description>
    </item>
    
    <item>
      <title>JavaScript, clipboard access and hidden flash widgets</title>
      <link>https://sdqali.in/blog/2013/04/05/javascript-clipboard-access-and-hidden-flash-widgets/</link>
      <pubDate>Fri, 05 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/04/05/javascript-clipboard-access-and-hidden-flash-widgets/</guid>
      <description>Letting users copy text and URLs from a webpage effortlessly is one of those things that sound easy in theory, but is a pain when it comes to implementation. Browsers take great efforts to ensure that web pages are sand boxed in such a way that a web application can not read from or write to the system&amp;rsquo;s clipboard without jumping through hoops. Firefox asks you to change browser configurations to give web applications access to the system clipboard, while Internet Explorer shows a modal dialog to confirm that you really want to allow the application access.</description>
    </item>
    
    <item>
      <title>Reducing Emacs startup time while committing</title>
      <link>https://sdqali.in/blog/2013/01/22/reducing-emacs-startup-time-while-committing/</link>
      <pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2013/01/22/reducing-emacs-startup-time-while-committing/</guid>
      <description>I use Emacs as my primary text editor and I use it to edit commit messages for Git. I almost never use the -m option with git commit. Since I have a fairly customised Emacs configuration based around Sam Aaron&amp;rsquo;s Emacs Live, this means that for every commit, there is a visible delay for Emacs to start up for the commit message. I was looking for ways to reduce this and figured out that running Emacs in daemon mode and using emacsclient as the GIT_EDITOR would solve this.</description>
    </item>
    
    <item>
      <title>My first Firefox plugin: GetCache - View cached version of the current page</title>
      <link>https://sdqali.in/blog/2012/11/29/my-first-firefox-plugin-getcache---view-cached-version-of-the-current-page/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/11/29/my-first-firefox-plugin-getcache---view-cached-version-of-the-current-page/</guid>
      <description>&lt;p&gt;I released my &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/getcache-ff/&#34;&gt;first Firefox plugin&lt;/a&gt; today. It
is awaiting review, but if you are adventurous, you can install it right
now. Go on, try it.&lt;/p&gt;

&lt;p&gt;After I had written the &lt;a href=&#34;https://sdqali.in/blog/2012/11/28/getcache-a-chrome-plugin-to-view-cached-version-of-the-current-page/&#34;&gt;Chrome version&lt;/a&gt; yesterday, &lt;a href=&#34;https://twitter.com/ManishChaks&#34;&gt;Manish&lt;/a&gt; suggested
that I should write one for Firefox. There already exist Firfox plugins
that does exactly what GetCache does, but I decided to go ahead and write it
for fun. And of course, the fact that I could publish it without having
to sign up with my Credit Card information was enticing.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GetCache - A Chrome plugin to view cached version of the current page</title>
      <link>https://sdqali.in/blog/2012/11/28/getcache---a-chrome-plugin-to-view-cached-version-of-the-current-page/</link>
      <pubDate>Wed, 28 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/11/28/getcache---a-chrome-plugin-to-view-cached-version-of-the-current-page/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Download the plugin
&lt;a href=&#34;https://sdqali.in/downloads/GetCache.crx&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On numerous occasions, I have ran in to the situation where I had to
look up how to load Google&amp;rsquo;s cached version of a particular page. This
happens often when I follow a link from Hacker News or Reddit to a blog
post and the blog has went down due to the great avalanche of traffic
from HN and Reddit.&lt;/p&gt;

&lt;p&gt;After struggling to remember and having to Google how to get the cached
version, I decided to finally solve this issue. I wrote &lt;code&gt;GetCache&lt;/code&gt;, a
dead simple Google Chrome plugin that loads Google&amp;rsquo;s cached version of
the current page.&lt;/p&gt;

&lt;h2 id=&#34;installing&#34;&gt;Installing&lt;/h2&gt;

&lt;p&gt;You can download the plugin
&lt;a href=&#34;https://sdqali.in/downloads/GetCache.crx&#34;&gt;here&lt;/a&gt;. In order to install it, open your
Extensions page (&lt;code&gt;Window -&amp;gt; Extensions&lt;/code&gt;) and drag the downloaded &lt;code&gt;CRX&lt;/code&gt;
file to the page.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On REST, Content-Type, Google Chrome and Caching</title>
      <link>https://sdqali.in/blog/2012/11/27/on-rest-content-type-google-chrome-and-caching/</link>
      <pubDate>Tue, 27 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/11/27/on-rest-content-type-google-chrome-and-caching/</guid>
      <description>&lt;p&gt;Representational State Transfer (REST) is a style of software
architecture for distributed systems that has replaced technologies like
&lt;a href=&#34;http://en.wikipedia.org/wiki/SOAP&#34;&gt;SOAP&lt;/a&gt; as the predominant Web service
design model. Originally proposed by Roy Fielding in his &lt;a href=&#34;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm&#34;&gt;Doctorate
dissertation&lt;/a&gt;,
REST puts a lot of emphasis on resources, their representations and states. Basically a URL indicates a
single resource; the HTTP method (GET, POST, PUT, DELETE) indicates what
action should be performed on that resource; and the ACCEPT header indicates the format that the resource should be presented in.&lt;/p&gt;

&lt;h2 id=&#34;chrome-and-content-type&#34;&gt;Chrome and Content-Type&lt;/h2&gt;

&lt;p&gt;Having seen this, one would assume that if you have a resource, say a
&lt;code&gt;User&lt;/code&gt; on your system and there were two representations of that
resource - HTML and JSON. Let&amp;rsquo;s assume that the HTML representation does
an AJAX call to fetch the JSON representation and renders it. While this
sounds simple enough, Google Chrome, one of the world&amp;rsquo;s most popular
browsers
&lt;a href=&#34;https://code.google.com/p/chromium/issues/detail?id=108766&#34;&gt;totally breaks this&lt;/a&gt;. A
good example of this weird behaviour can be seen &lt;a href=&#34;http://chrome-json-bug.heroku.com/docs&#34;&gt;here&lt;/a&gt;.

I ran in to this issue while playing around with &lt;a href=&#34;http://expressjs.com/&#34;&gt;Express JS&lt;/a&gt;.
Now, the interesting thing here is that the Chrome developers seem to
have closed the issue without providing any convincing answers or
indicating whether they would fix this.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding Python&#39;s &#34;with&#34; statement</title>
      <link>https://sdqali.in/blog/2012/07/09/understanding-pythons-with-statement/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/07/09/understanding-pythons-with-statement/</guid>
      <description>&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h2&gt;

&lt;p&gt;Python&amp;rsquo;s &lt;code&gt;with&lt;/code&gt; statement provides a very convenient way of dealing with the situation where you have to do a setup and teardown to make something happen. A very good example for this is the situation where you want to gain a handler to a file, read data from the file and the close the file handler.&lt;/p&gt;

&lt;p&gt;Without the &lt;code&gt;with&lt;/code&gt; statement, one would write something along the lines of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#c30&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/tmp/foo.txt&amp;#34;&lt;/span&gt;)
data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read()
&lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;close()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are two annoying things here. First, you end up forgetting to close the file handler. The second is how to handle exceptions that may occur once the file handler has been obtained. One could write something like this to get around this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#c30&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/tmp/foo.txt&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;try&lt;/span&gt;:
    data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;finally&lt;/span&gt;:
    &lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;close()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While this works well, it is unnecessarily verbose. This is where &lt;code&gt;with&lt;/code&gt; is useful. The good thing about &lt;code&gt;with&lt;/code&gt; apart from the better syntax is that it is very good handling exceptions. The above code would look like this, when using &lt;code&gt;with&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#c30&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/tmp/foo.txt&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt;:
   data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Heredocs in Ruby and Python</title>
      <link>https://sdqali.in/blog/2012/07/04/heredocs-in-ruby-and-python/</link>
      <pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/07/04/heredocs-in-ruby-and-python/</guid>
      <description>&lt;p&gt;I have been doing some coding in Python recently. While playing around with some code, I noticed that the way &lt;a href=&#34;http://en.wikipedia.org/wiki/Here_document&#34;&gt;heredocs&lt;/a&gt; are used in Python is different from Ruby.&lt;/p&gt;

&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;

&lt;p&gt;Consider the following snippet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# test.py&lt;/span&gt;

&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;some text in single line&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;As opposed to
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;some text
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;written as
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;heredoc
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;and then another single line&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When run, this would result in this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;bash-3.2$ python test.py
some text in single line

As opposed to
some text
written as
heredoc

and &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;then&lt;/span&gt; another single line&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice how there is a preceding and trailing linebreak around the string printed using heredoc.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Micro Journal - simple Git-backed journal in Python</title>
      <link>https://sdqali.in/blog/2012/06/25/micro-journal---simple-git-backed-journal-in-python/</link>
      <pubDate>Mon, 25 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/06/25/micro-journal---simple-git-backed-journal-in-python/</guid>
      <description>Today, I pushed out Microjournal, a simple and lightweight journal. I wrote Microjournal to reduce the pain of typing a number of commands to create and maintain my daily journal which I type out in Emacs and use Git to store. It is a single file Python script.
Microjournal does not do much on it&amp;rsquo;s own. It creates a Git repository for you, and then you can write down entries whenever you feel like.</description>
    </item>
    
    <item>
      <title>VodQA NCR: Maintaining Large Test Suites</title>
      <link>https://sdqali.in/blog/2012/06/24/vodqa-ncr-maintaining-large-test-suites/</link>
      <pubDate>Sun, 24 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/06/24/vodqa-ncr-maintaining-large-test-suites/</guid>
      <description>Srijayanth Sridhar and I did a talk yesterday at vodQA NCR.
The talk was about what makes maintenance of large test suites a pain and the things that have worked for us and we have seen work for other teams.
It went well and we got a lot of good feedback from the crowd. The prezi for the talk is below:
.prezi-player { width: 550px; } .prezi-player-links { text-align: center; }Maintaining Large Test Suites on Prezi</description>
    </item>
    
    <item>
      <title>Know Your Tools - Don&#39;t Shoot Yourself in the Foot</title>
      <link>https://sdqali.in/blog/2012/06/06/know-your-tools---dont-shoot-yourself-in-the-foot/</link>
      <pubDate>Wed, 06 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/06/06/know-your-tools---dont-shoot-yourself-in-the-foot/</guid>
      <description>&lt;p&gt;Imagine this - Your build is taking forever. You put in a lot of effort and restructure it. Things improve a lot, but it is far from where you would like it to be. You try hard to identify things that could improve the build time, but fail. You blame the platforms you use, you blame Ruby and you even blame the relative position of the Moon to Venus. Slowly you learn to accept the slow build as a part of your life. Months later a new developer joins the team and proves that there is a bug in the build scripts that causes certain tasks to be run twice.&lt;/p&gt;

&lt;p&gt;This happened to us recently, and the subsequent debugging/postmortem revealed that there were things about our tools that we simply did not know.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Managing security certificates from the console - on Windows, Mac OS X and Linux</title>
      <link>https://sdqali.in/blog/2012/06/05/managing-security-certificates-from-the-console---on-windows-mac-os-x-and-linux/</link>
      <pubDate>Tue, 05 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/06/05/managing-security-certificates-from-the-console---on-windows-mac-os-x-and-linux/</guid>
      <description>&lt;p&gt;For me the last two weeks or so have involved a lot of wrestling with SSL certificates. One of the things that took some time to figure out was how to piggy-back on the tools provided by different Operating Systems to manage certificates. We did not want to rewrite &lt;a href=&#34;https://www.mozilla.org/projects/security/pki/nss/&#34; title=&#34;NSS&#34;&gt;NSS&lt;/a&gt;. Luckily for us, all the major OSes provide tools to manage certificates from the command line.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Indian and Pakistani cricketers - who make better debuts?</title>
      <link>https://sdqali.in/blog/2012/05/11/indian-and-pakistani-cricketers---who-make-better-debuts/</link>
      <pubDate>Fri, 11 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/05/11/indian-and-pakistani-cricketers---who-make-better-debuts/</guid>
      <description>&lt;p&gt;Recently a friend and I had an argument about who makes better debuts among Indian and Pakistani cricket players. Now, I am not into cricket. But I do watch the odd matches here and there and am generally aware of what is going on in the game. My stand was that Pakistani players make better debuts compared to Indian players, while my friend was adamant that Indian players make better debuts. My friend is more of a cricket guy than I ever was and he asked me what is the basis of my stand. It was just a gut feel for me and I had to leave it as there was no way for me to prove that my gut feel was correct. But I did want to try, though.&lt;/p&gt;

&lt;p&gt;I decided to see if I could prove my theory. Luckily, Cricinfo has all this data, although they dont make it easy for you to get it. I wrote some scripts to pull this data and decided to visualise this using the awesome d3 library. In the end, this became more about figuring out d3 than winning the argument, but doing this was fun.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fixing Flyspell for Emacs in Mac OS X</title>
      <link>https://sdqali.in/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/05/04/fixing-flyspell-for-emacs-in-mac-os-x/</guid>
      <description>I use the flyspell-mode as a spell checking mechanism in emacs. Recently, I moved to Mac OS X, and I began to get this error whenever I started emacs:
Error enabling Flyspell mode: (Searching for program No such file or directory aspell) I had installed aspell with Homebrew. The issue seemed to be that Emacs was unable to find the aspell binary. Homebrew installs binaries in /usr/local/bin and it was in my $PATH.</description>
    </item>
    
    <item>
      <title>Finding un-merged commits with git cherry</title>
      <link>https://sdqali.in/blog/2012/04/29/finding-un-merged-commits-with-git-cherry/</link>
      <pubDate>Sun, 29 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/04/29/finding-un-merged-commits-with-git-cherry/</guid>
      <description>In a project that I was a part of in the recent past, we used Story Branching. While it afforded us flexibility in pulling and pushing stories in and out of releases, it has given us some scares in the past. Somebody makes commits against a story, but the commit does not get merged to the correct release branch where it is supposed to go or gets merged to another release.</description>
    </item>
    
    <item>
      <title>Bullet proof Jenkins setup</title>
      <link>https://sdqali.in/blog/2012/02/03/bullet-proof-jenkins-setup/</link>
      <pubDate>Fri, 03 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/02/03/bullet-proof-jenkins-setup/</guid>
      <description>In this post, I will describe how a neat setup and some discipline will ensure a Jenkins that can be rolled back and recreated very easily - a bullet proof Jenkins setup.
I have been working on configuring our Jenkins instance. This was the first time I had played around with Jenkins. I am fairly comfortable with Go from ThoughtWorks Studios. All of my past teams used Go as their tool for continuous delivery.</description>
    </item>
    
    <item>
      <title>Why your project should have a Getting Started guide.</title>
      <link>https://sdqali.in/blog/2012/01/17/why-your-project-should-have-a-getting-started-guide./</link>
      <pubDate>Tue, 17 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/01/17/why-your-project-should-have-a-getting-started-guide./</guid>
      <description>My new team at work is writing a bunch of Rails applications. This is one of those codebases that one would call &#34;legacy&#34; without much argument. Most of these apps have their own patched, vendorized Rails versions.
Getting up and running was an absolute pain. This project existed before Bundler and the list of gem dependencies are not checked in. I got the output of running gem list on a colleague&#39;s box, wrote a Ruby script to generate a shell script that installs all the gems.</description>
    </item>
    
    <item>
      <title>Debugging: C Sharp&#39;s HttpWebRequest, 100-Continue and nginx</title>
      <link>https://sdqali.in/blog/2012/01/16/debugging-c-sharps-httpwebrequest-100-continue-and-nginx/</link>
      <pubDate>Mon, 16 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2012/01/16/debugging-c-sharps-httpwebrequest-100-continue-and-nginx/</guid>
      <description>Recently I spent some time debugging an issue our team was facing around some C# code making a request on one of our servers. The request was throwing a &#34;The server committed a protocol violation. Section=ResponseStatusLine&#34; error.
Initial investigation suggested that this could happen if we are making HTTP/1.1 requests to a server configured for HTTP/1.0. Our Rails application runs on Mongrel fronted with nginx 0.6.5. We modified the C# code to use HTTP/1.</description>
    </item>
    
    <item>
      <title>Wikipedia Page Hopping</title>
      <link>https://sdqali.in/blog/2011/05/17/wikipedia-page-hopping/</link>
      <pubDate>Tue, 17 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2011/05/17/wikipedia-page-hopping/</guid>
      <description>I have realized that like most users of Wikipedia, I do a lot of Wikipedia page-hopping [1]. Wikipedia is sort of addictive that way. You start reading about a piece of Flamenco music and after twenty minutes find yourself staring at the page about ETA, a Basque nationalist organization. So I decided to figure out how I exactly do I get lost in the huge list of interconnected articles. I use Chromium, and it stores its history in a SQLite3 database file.</description>
    </item>
    
    <item>
      <title>Empathy Log Parser</title>
      <link>https://sdqali.in/blog/2011/03/24/empathy-log-parser/</link>
      <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2011/03/24/empathy-log-parser/</guid>
      <description>I use Empathy as my preferred IM application. Today, I wanted to have a look at an IM conversation I had with someone. I pulled out the Empathy log corresponding to that conversation, and boom - it is in XML.
Just another excuse to write code. So I came up with the following. It was easy to write and it does not do much - It uses the Hpricot gem to parse the XML and prints the name of the people involved in the chat and their messages in a human readable form.</description>
    </item>
    
    <item>
      <title>Binary Signature Art</title>
      <link>https://sdqali.in/blog/2011/03/23/binary-signature-art/</link>
      <pubDate>Wed, 23 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2011/03/23/binary-signature-art/</guid>
      <description>I was reading this very interesting thread on the xkcd forum when I noticed a post from a user with the following signature in binary:
01001101 01100001 01100100 01100101 00100000 01011001 01101111 01110101 00100000 01001100 01101111 01101111 01101011 00100001&amp;#34; At first, that did not particularly entice me, mostly because the topic being discussed was really interesting, but it did come back to my focus when I saw that another user had quoted the signature, along with the comment Yeah, you know it.</description>
    </item>
    
    <item>
      <title>Java Arrays in JRuby</title>
      <link>https://sdqali.in/blog/2010/03/16/java-arrays-in-jruby/</link>
      <pubDate>Tue, 16 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2010/03/16/java-arrays-in-jruby/</guid>
      <description>Recently my team encountered a frustrating thing while working with a Java library in JRuby. It took us long to figure out what was going wrong. This is an attempt to write down what was happening.
You are in Ruby world, a world of weak typing, no type casting and pure bliss in coding. You forget that some languages care about the type of elements in an Array. And you end up spending a lot of time figuring out why you are staring at a stupid looking exception.</description>
    </item>
    
    <item>
      <title>Autorun.py - Execute stuff on file change</title>
      <link>https://sdqali.in/blog/2010/01/09/autorun.py---execute-stuff-on-file-change/</link>
      <pubDate>Sat, 09 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sdqali.in/blog/2010/01/09/autorun.py---execute-stuff-on-file-change/</guid>
      <description>I really liked ZenTest&amp;rsquo;s Autospec in action. Recently, when I was trying to write some Python stuff, I thought it would be nice if I would have a tool that would just run the unit tests, so that I don&amp;rsquo;t have to switch between console windows. Better still, I could run it from inside my Emacs.
Clearly, monitoring files for changes, shouldn&amp;rsquo;t be big deal. I decided to write the tool myself in Python.</description>
    </item>
    
  </channel>
</rss>