<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Groovy on {code that works}</title>
    <link>https://sadique.io/categories/groovy/</link>
    <description>Recent content in Groovy on {code that works}</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Oct 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sadique.io/categories/groovy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accessing Environment Variables in Gradle</title>
      <link>https://sadique.io/blog/2013/10/01/accessing-environment-variables-in-gradle/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/10/01/accessing-environment-variables-in-gradle/</guid>
      <description>I have been writing a fun Android App. Share With Title is a small application that allows you to share web pages you are reading to other applications without having to jump through the messy copy-paste hoop. (You should try it. If you share stuff from the web like I do, it will save you a lot of time and frustration). I have been coding on Android Studio, Google&amp;rsquo;s IntelliJ based IDE for Android development.</description>
    </item>
    
    <item>
      <title>Reading user input in Gradle scripts</title>
      <link>https://sadique.io/blog/2013/10/01/reading-user-input-in-gradle-scripts/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sadique.io/blog/2013/10/01/reading-user-input-in-gradle-scripts/</guid>
      <description>Continuing from the last blog post, I have been looking at reading user input from a Gradle script. This was a result of Stack Overflow user user672009&amp;rsquo;s question about prompting for input from a Gradle script so the one does not have to include passwords in the script while checking in.
Just like the last example, the fact that Gradle scripts are written in a Groovy DSL comes to our help.</description>
    </item>
    
  </channel>
</rss>